{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["\"use strict\";\r\n\r\n(function () {\r\n\tfunction byId(id) {\r\n\t\treturn document.getElementById(id);\r\n\t}\r\n\tconst DOM = {\r\n\t\tnav: {\r\n\t\t\tmenuBtn: byId(\"menu-btn\"),\r\n\t\t\tsettingsBtn: byId(\"settings-btn\"),\r\n\t\t\tnewGameBtn: byId(\"newgame-btn\"),\r\n\t\t\tmineCounter: document.querySelector(\"#mine-counter > span\"),\r\n\t\t\ttimer: {\r\n\t\t\t\tminutes: byId(\"timer-minutes\"),\r\n\t\t\t\tseconds: byId(\"timer-seconds\"),\r\n\t\t\t},\r\n\t\t\thintBtn: byId(\"hint-btn\"),\r\n\t\t\tmarkSwapBtn: byId(\"mark-btn\")\r\n\t\t},\r\n\t\tplayarea: {\r\n\t\t\tcolumnNums: byId(\"column-nums\"),\r\n\t\t\trowNums: byId(\"row-nums\"),\r\n\t\t\tboard: {\r\n\t\t\t\ttiles: null,\r\n\t\t\t\tcontainer: byId(\"board\"),\r\n\t\t\t},\r\n\t\t\twinOverlay: {\r\n\t\t\t\tcontainer: byId(\"win-overlay\"),\r\n\t\t\t\tnewGameBtn: byId(\"win-new-game-btn\"),\r\n\t\t\t\tviewBoardBtn: byId(\"win-view-board-btn\"),\r\n\t\t\t},\r\n\t\t\tloseOverlay: {\r\n\t\t\t\tcontainer: byId(\"lose-overlay\"),\r\n\t\t\t\tnewGameBtn: byId(\"lose-new-game-btn\"),\r\n\t\t\t\tviewBoardBtn: byId(\"lose-view-board-btn\"),\r\n\t\t\t},\r\n\t\t},\r\n\t\tmodals: {\r\n\t\t\tcontainer: byId(\"modals\"),\r\n\t\t\tmenu: {\r\n\t\t\t\tcontainer: byId(\"menu-modal\"),\r\n\t\t\t\tbtns: byId(\"menu-modal-btns\"),\r\n\t\t\t},\r\n\t\t\tsettings: {\r\n\t\t\t\tcontainer: byId(\"settings-modal\"),\r\n\t\t\t\tboardSize: byId(\"settings-boardSize\"),\r\n\t\t\t\tcustomBoard: {\r\n\t\t\t\t\tcontainer: byId(\"settings-customBoard\"),\r\n\t\t\t\t\trows: byId(\"settings-boardHeight\"),\r\n\t\t\t\t\tcolumns: byId(\"settings-boardWidth\"),\r\n\t\t\t\t\tnumOfMines: byId(\"settings-mineNum\"),\r\n\t\t\t\t\tmaxMines: byId(\"settings-maxMines\")\r\n\t\t\t\t},\r\n\t\t\t\tboardApplyWarning: byId(\"settings-applywarning\"),\r\n\t\t\t\ttileSize: byId(\"settings-tileSize\"),\r\n\t\t\t},\r\n\t\t},\r\n\t\tmarkCircleDiv: byId(\"markCircle\"),\r\n\t\tmarkCircle: document.querySelector(\"#markCircle circle\"),\r\n\t};\r\n\r\n\tlet board = [];\r\n\r\n\tclass Tile {\r\n\t\tuncovered = false;\r\n\t\thasMine = false;\r\n\t\tnumOfNearbyMines = 0;\r\n\t\tmarkedAsEmpty = false;\r\n\t};\r\n\r\n\tconst gameVars = {\r\n\t\tstate: \"initial\", // 3 states available: initial (new game started, waiting for player to uncover first tile), underway (game in progress), finished (game won or lost, no input allowed on board)\r\n\t\tminesLeft: 20,\r\n\t\thints: 1,\r\n\t\thintMode: false,\r\n\t\tclickSwap: false,\r\n\t\ttime: {\r\n\t\t\tminutes: 0,\r\n\t\t\tseconds: 0,\r\n\t\t},\r\n\t\tboard: {\r\n\t\t\trows: 10,\r\n\t\t\tcolumns: 10,\r\n\t\t\tnumOfMines: 20,\r\n\t\t},\r\n\t\tboardSize: \"small\",\r\n\t\trowMineCount: [],\r\n\t\tcolumnMineCount: [],\r\n\t};\r\n\r\n\tlet settings = {\r\n\t\tboard: {\r\n\t\t\trows: 10,\r\n\t\t\tcolumns: 10,\r\n\t\t\tnumOfMines: 20,\r\n\t\t},\r\n\t\tboardSize: \"small\",\r\n\t\tmaxMines: 50\r\n\t};\r\n\r\n\tconst boardSizes = {\r\n\t\tsmall: {\r\n\t\t\trows: 10,\r\n\t\t\tcolumns: 10,\r\n\t\t\tnumOfMines: 20,\r\n\t\t},\r\n\t\tmedium: {\r\n\t\t\trows: 15,\r\n\t\t\tcolumns: 15,\r\n\t\t\tnumOfMines: 50,\r\n\t\t},\r\n\t\tlarge: {\r\n\t\t\trows: 20,\r\n\t\t\tcolumns: 20,\r\n\t\t\tnumOfMines: 90\r\n\t\t},\r\n\t\tverylarge: {\r\n\t\t\trows: 30,\r\n\t\t\tcolumns: 30,\r\n\t\t\tnumOfMines: 200\r\n\t\t}\r\n\t}\r\n\r\n\tlet statistics = {\r\n\t\tsmall: {\r\n\t\t\t// Games won/lost/played, best time, longest winning/losing streaks, current streak\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: \"\",\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0\r\n\t\t},\r\n\t\tmedium: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: \"\",\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0\r\n\t\t},\r\n\t\tlarge: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: \"\",\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0\r\n\t\t},\r\n\t\tcustom: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0\r\n\t\t},\r\n\t};\r\n\r\n\tlet clockInterval;\r\n\r\n\t// Mark circle\r\n\r\n\tlet radius = DOM.markCircle.r.baseVal.value;\r\n\tlet circumference = radius * 2 * Math.PI;\r\n\r\n\tDOM.markCircle.style.strokeDasharray = `${circumference} ${circumference}`;\r\n\tDOM.markCircle.style.strokeDashoffset = `${circumference}`;\r\n\r\n\tfunction setProgress(percent) {\r\n\t\tconst offset = circumference - percent / 100 * circumference;\r\n\t\tDOM.markCircle.style.strokeDashoffset = offset;\r\n\t}\r\n\r\n\tfunction createEmptyBoard() {\r\n\t\tboard = [];\r\n\t\tfor (let i = 0; i < gameVars.board.rows; i++) {\r\n\t\t\tboard[i] = [];\r\n\t\t\tfor (let j = 0; j < gameVars.board.columns; j++) {\r\n\t\t\t\tboard[i][j] = new Tile();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction populateBoard(firstTileRow, firstTileColumn, numOfMines) {\r\n\t\tlet values = [];\r\n\t\tfor (let i = 0; i < gameVars.board.rows; i++) {\r\n\t\t\tfor (let j = 0; j < gameVars.board.columns; j++) {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\trow: i,\r\n\t\t\t\t\tcolumn: j\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tgameVars.rowMineCount = new Array(gameVars.board.rows).fill(0);\r\n\t\tgameVars.columnMineCount = new Array(gameVars.board.columns).fill(0);\r\n\r\n\t\tlet firstTile = values.findIndex((tile) => {\r\n\t\t\treturn tile.row == firstTileRow && tile.column == firstTileColumn;\r\n\t\t});\r\n\r\n\t\tif (firstTile != -1) {\r\n\t\t\tvalues.splice(firstTile, 1);\r\n\t\t}\r\n\t\tboard[firstTileRow][firstTileColumn].hasMine = true;\r\n\r\n\t\tfor (let i = 1; i < numOfMines; i++) {\r\n\t\t\tlet random = Math.floor(Math.random() * values.length);\r\n\t\t\tboard[values[random].row][values[random].column].hasMine = true;\r\n\t\t\tvalues.splice(random, 1);\r\n\t\t}\r\n\r\n\t\t// Assign numbers to each tile, and count mines in each row and column\r\n\t\tfor (let row in board) {\r\n\t\t\tfor (let column in board[row]) {\r\n\t\t\t\tcountNearbyMines(parseInt(row), parseInt(column));\r\n\t\t\t\tif (board[row][column].hasMine) {\r\n\t\t\t\t\tgameVars.rowMineCount[row]++;\r\n\t\t\t\t\tgameVars.columnMineCount[column]++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction checkIfTileHasMine(row, column) {\r\n\t\tif (\r\n\t\t\trow < 0 ||\r\n\t\t\trow >= gameVars.board.rows ||\r\n\t\t\tcolumn < 0 ||\r\n\t\t\tcolumn >= gameVars.board.columns ||\r\n\t\t\t!board[row][column].hasMine\r\n\t\t) {\r\n\t\t\treturn 0;\r\n\t\t} else {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction countNearbyMines(row, column) {\r\n\t\tlet count = 0;\r\n\t\tfor (let i = -1; i <= 1; i++) {\r\n\t\t\tfor (let j = -1; j <= 1; j++) {\r\n\t\t\t\tif (i == 0 && j == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tcount += checkIfTileHasMine(row + i, column + j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tboard[row][column].numOfNearbyMines = count;\r\n\t}\r\n\r\n\tfunction getTileElement(row, column) {\r\n\t\treturn DOM.playarea.board.container.querySelector(\r\n\t\t\t`[data-row=\"${row}\"][data-column=\"${column}\"]`\r\n\t\t);\r\n\t}\r\n\r\n\tfunction tileClick(row, column) {\r\n\t\tif (gameVars.state == \"initial\") {\r\n\t\t\tgameVars.state = \"underway\";\r\n\t\t\tpopulateBoard(row, column, gameVars.board.numOfMines);\r\n\t\t\tdisplayBorderNums();\r\n\t\t\tuncoverTile(row, column);\r\n\t\t\tDOM.nav.mineCounter.innerHTML = gameVars.minesLeft;\r\n\t\t\tclockInterval = setInterval(tickClock, 1000);\r\n\t\t\tif (gameVars.xyzzyActivated) {\r\n\t\t\t\txyzzyInit();\r\n\t\t\t}\r\n\t\t} else if (gameVars.state == \"underway\") {\r\n\t\t\tif (gameVars.hintMode == true) {\r\n\t\t\t\tuncoverTile(row, column, true);\r\n\t\t\t\tgameVars.hints -= 1;\r\n\t\t\t\tDOM.nav.hintBtn.dataset.hints = gameVars.hints;\r\n\t\t\t\tif (gameVars.hints <= 0) {\r\n\t\t\t\t\tDOM.nav.hintBtn.classList.remove(\"hint-active\");\r\n\t\t\t\t\tDOM.nav.hintBtn.classList.add(\"hint-disabled\");\r\n\t\t\t\t\tgameVars.hintMode = false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tuncoverTile(row, column);\r\n\t\t\t}\r\n\t\t\tDOM.nav.mineCounter.innerHTML = gameVars.minesLeft;\r\n\t\t}\r\n\t}\r\n\r\n\tlet markMode = \"none\";\r\n\r\n\tfunction tileMark(row, column) {\r\n\t\tif (gameVars.state == \"underway\" && !board[row][column].uncovered) {\r\n\t\t\tif (!board[row][column].markedAsEmpty) {\r\n\t\t\t\tif (markMode == \"none\") {\r\n\t\t\t\t\tmarkMode = \"mark\";\r\n\t\t\t\t}\r\n\t\t\t\tif (markMode == \"mark\") {\r\n\t\t\t\t\tconsole.log(\"marking\");\r\n\t\t\t\t\tboard[row][column].markedAsEmpty = true;\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = '<i class=\"icon-flag\"></i>';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (markMode == \"none\") {\r\n\t\t\t\t\tmarkMode = \"remove\";\r\n\t\t\t\t}\r\n\t\t\t\tif (markMode == \"remove\") {\r\n\t\t\t\t\tconsole.log(\"removing\");\r\n\t\t\t\t\tboard[row][column].markedAsEmpty = false;\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction uncoverTile(row, column, fromMineClick = false, override = false) {\r\n\t\tif (\r\n\t\t\t(gameVars.state != \"underway\" && !override) ||\r\n\t\t\trow < 0 ||\r\n\t\t\trow >= gameVars.board.rows ||\r\n\t\t\tcolumn < 0 ||\r\n\t\t\tcolumn >= gameVars.board.columns ||\r\n\t\t\tboard[row][column].uncovered\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (board[row][column].hasMine && !board[row][column].markedAsEmpty) {\r\n\t\t\tgetTileElement(row, column).innerHTML = \"<i class='icon-mine'></i>\";\r\n\t\t\tgetTileElement(row, column).dataset.clickable = \"false\";\r\n\t\t\tboard[row][column].uncovered = true;\r\n\t\t\tfor (let i = -1; i <= 1; i++) {\r\n\t\t\t\tfor (let j = -1; j <= 1; j++) {\r\n\t\t\t\t\tif (i == 0 && j == 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tuncoverTile(row + i, column + j, true, override);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgameVars.minesLeft--;\r\n\t\t\tif (gameVars.minesLeft == 0 && gameVars.state == \"underway\") {\r\n\t\t\t\tDOM.playarea.winOverlay.container.classList.remove(\"fade\");\r\n\t\t\t\tDOM.playarea.winOverlay.container.classList.add(\"visible\");\r\n\t\t\t\tDOM.playarea.board.container.classList.add(\"no-input\");\r\n\t\t\t\tgameVars.state = \"finished\";\r\n\t\t\t\tclearInterval(clockInterval);\r\n\t\t\t}\r\n\t\t} else if (fromMineClick) {\r\n\t\t\tboard[row][column].uncovered = true;\r\n\t\t\tboard[row][column].markedAsEmpty = false;\r\n\t\t\tgetTileElement(row, column).innerHTML = board[row][column].numOfNearbyMines;\r\n\t\t\tgetTileElement(row, column).dataset.clickable = \"false\";\r\n\t\t} else if (\r\n\t\t\t!board[row][column].markedAsEmpty &&\r\n\t\t\tgameVars.state == \"underway\"\r\n\t\t) {\r\n\t\t\tgetTileElement(row, column).classList.add(\"wrong-tile\");\r\n\t\t\tDOM.playarea.loseOverlay.container.classList.remove(\"fade\");\r\n\t\t\tDOM.playarea.loseOverlay.container.classList.add(\"visible\");\r\n\t\t\tDOM.playarea.board.container.classList.add(\"no-input\");\r\n\t\t\tgameVars.state = \"finished\";\r\n\t\t\tclearInterval(clockInterval);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction uncoverBoard() {\r\n\t\tfor (let row in board) {\r\n\t\t\tfor (let column in board[row]) {\r\n\t\t\t\tif (board[row][column].hasMine && !board[row][column].uncovered) {\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = \"<i class='icon-mine'></i>\";\r\n\t\t\t\t\tgetTileElement(row, column).dataset.clickable = \"false\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = board[row][column].numOfNearbyMines;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction tickClock() {\r\n\t\tgameVars.time.seconds++;\r\n\t\tif (gameVars.time.seconds >= 60) {\r\n\t\t\tgameVars.time.seconds -= 60;\r\n\t\t\tgameVars.time.minutes++;\r\n\t\t}\r\n\r\n\t\tif (gameVars.time.minutes <= 9) {\r\n\t\t\tDOM.nav.timer.minutes.innerHTML = `0${gameVars.time.minutes}`;\r\n\t\t} else {\r\n\t\t\tDOM.nav.timer.minutes.innerHTML = gameVars.time.minutes;\r\n\t\t}\r\n\t\tif (gameVars.time.seconds <= 9) {\r\n\t\t\tDOM.nav.timer.seconds.innerHTML = `0${gameVars.time.seconds}`;\r\n\t\t} else {\r\n\t\t\tDOM.nav.timer.seconds.innerHTML = gameVars.time.seconds;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction displayEmptyBorderNums() {\r\n\t\tlet html = \"\";\r\n\r\n\t\tfor (let i = 0; i < gameVars.board.rows; i++) {\r\n\t\t\thtml += `<div>#</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.rowNums.innerHTML = html;\r\n\t\thtml = \"\";\r\n\r\n\t\tfor (let i = 0; i < gameVars.board.columns; i++) {\r\n\t\t\thtml += `<div>#</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.columnNums.innerHTML = html;\r\n\t}\r\n\r\n\tfunction displayBorderNums() {\r\n\t\tlet html = \"\";\r\n\r\n\t\tfor (let row of gameVars.rowMineCount) {\r\n\t\t\thtml += `<div>${row}</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.rowNums.innerHTML = html;\r\n\t\thtml = \"\";\r\n\r\n\t\tfor (let column of gameVars.columnMineCount) {\r\n\t\t\thtml += `<div>${column}</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.columnNums.innerHTML = html;\r\n\t}\r\n\r\n\tlet multiTouch = false;\r\n\tlet markCircleTimeout;\r\n\tlet markTouch = false;\r\n\r\n\tfunction displayBoard() {\r\n\t\tlet html = \"\";\r\n\t\tfor (let row in board) {\r\n\t\t\thtml += `<div>`;\r\n\t\t\tfor (let column in board[row]) {\r\n\t\t\t\thtml += `<div data-row=\"${row}\" data-column=\"${column}\"></div>`;\r\n\t\t\t}\r\n\t\t\thtml += \"</div>\";\r\n\t\t}\r\n\t\tDOM.playarea.board.container.innerHTML = html;\r\n\t\tDOM.playarea.board.tiles = document.querySelectorAll(\r\n\t\t\t\"[data-row][data-column]\"\r\n\t\t);\r\n\r\n\t\tfor (let tile of DOM.playarea.board.tiles) {\r\n\t\t\ttile.addEventListener(\"pointerdown\", evt => {\r\n\t\t\t\tif (!evt.isPrimary || multiTouch) {\r\n\t\t\t\t\tmultiTouch = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (evt.button == 2) {\r\n\t\t\t\t\ttileMark(parseInt(tile.dataset.row), parseInt(tile.dataset.column), true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmarkCircleTimeout = setTimeout(() => {\r\n\t\t\t\t\t\tDOM.markCircleDiv.classList.add(\"hold\");\r\n\t\t\t\t\t\tsetProgress(100);\r\n\t\t\t\t\t\tDOM.markCircleDiv.style.top = `${evt.clientY - 80}px`;\r\n\t\t\t\t\t\tDOM.markCircleDiv.style.left = `${evt.clientX - 80}px`;\r\n\t\t\t\t\t\tmarkCircleTimeout = setTimeout(() => {\r\n\t\t\t\t\t\t\tDOM.markCircle.style.stroke = \"#0007\";\r\n\t\t\t\t\t\t\tmarkTouch = true;\r\n\t\t\t\t\t\t\tDOM.playarea.board.container.style.touchAction = \"none\";\r\n\t\t\t\t\t\t\ttileMark(parseInt(tile.dataset.row), parseInt(tile.dataset.column))\r\n\t\t\t\t\t\t}, 400)\r\n\t\t\t\t\t}, 300)\r\n\t\t\t\t}\r\n\t\t\t\tevt.target.releasePointerCapture(evt.pointerId);\r\n\t\t\t})\r\n\t\t\ttile.addEventListener(\"pointerup\", (evt) => {\r\n\t\t\t\tif (!evt.isPrimary) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (evt.isPrimary && multiTouch) {\r\n\t\t\t\t\tmultiTouch = false;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!markTouch && evt.button == 0) {\r\n\t\t\t\t\ttileClick(parseInt(tile.dataset.row), parseInt(tile.dataset.column));\r\n\t\t\t\t}\r\n\t\t\t\tclearTimeout(markCircleTimeout);\r\n\t\t\t});\r\n\t\t\ttile.addEventListener(\"contextmenu\", (evt) => {\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t\ttile.addEventListener(\"pointermove\", evt => {\r\n\t\t\t\tif (!evt.isPrimary) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tDOM.markCircleDiv.style.top = `${evt.clientY - 80}px`;\r\n\t\t\t\tDOM.markCircleDiv.style.left = `${evt.clientX - 80}px`;\r\n\t\t\t})\r\n\t\t\ttile.addEventListener(\"pointerenter\", (evt) => {\r\n\t\t\t\tif (!evt.isPrimary) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (markTouch || evt.buttons == 2) {\r\n\t\t\t\t\ttileMark(parseInt(tile.dataset.row), parseInt(tile.dataset.column));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttile.addEventListener(\"pointercancel\", evt => {\r\n\t\t\t\tDOM.markCircleDiv.classList.remove(\"hold\");\r\n\t\t\t\tDOM.markCircle.style.stroke = \"#000F\";\r\n\t\t\t\tsetProgress(0);\r\n\t\t\t\tclearTimeout(markCircleTimeout);\r\n\t\t\t\tmarkTouch = false;\r\n\t\t\t\tmarkMode = \"none\";\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.body.addEventListener(\"pointerup\", () => {\r\n\t\tDOM.markCircleDiv.classList.remove(\"hold\");\r\n\t\tDOM.markCircle.style.stroke = \"#000F\";\r\n\t\tsetProgress(0);\r\n\t\tmarkTouch = false;\r\n\t\tDOM.playarea.board.container.style.removeProperty(\"touch-action\");\r\n\t\tclearTimeout(markCircleTimeout);\r\n\t\tmarkMode = \"none\";\r\n\t})\r\n\r\n\tfunction newGame() {\r\n\t\tgameVars.boardSize = settings.boardSize;\r\n\t\tif (settings.boardSize != \"custom\") {\r\n\t\t\tObject.assign(gameVars.board, boardSizes[gameVars.boardSize]);\r\n\t\t} else {\r\n\t\t\tObject.assign(gameVars.board, settings.board);\r\n\t\t}\r\n\t\tDOM.modals.settings.boardApplyWarning.style.removeProperty(\"display\");\r\n\t\tgameVars.hints = 1 + Math.floor(gameVars.board.columns * gameVars.board.rows / 400);\r\n\t\tgameVars.hintMode = false;\r\n\t\tDOM.nav.hintBtn.dataset.hints = gameVars.hints;\r\n\t\tDOM.nav.hintBtn.classList.remove(\"hint-active\");\r\n\t\tDOM.nav.hintBtn.classList.remove(\"hint-disabled\");\r\n\t\tcreateEmptyBoard();\r\n\t\tdisplayBoard();\r\n\t\tdisplayEmptyBorderNums();\r\n\t\tgameVars.state = \"initial\";\r\n\t\tclearInterval(clockInterval);\r\n\t\tgameVars.time.minutes = gameVars.time.seconds = 0;\r\n\t\tDOM.nav.timer.minutes.innerHTML = DOM.nav.timer.seconds.innerHTML = \"00\";\r\n\t\tDOM.playarea.board.container.classList.remove(\"no-input\");\r\n\t\tDOM.nav.mineCounter.innerHTML = gameVars.minesLeft = gameVars.board.numOfMines;\r\n\t}\r\n\r\n\tDOM.nav.newGameBtn.addEventListener(\"click\", evt => {\r\n\t\tnewGame();\r\n\t});\r\n\r\n\tDOM.nav.hintBtn.addEventListener(\"click\", () => {\r\n\t\tif (gameVars.hints >= 1) {\r\n\t\t\tDOM.nav.hintBtn.classList.toggle(\"hint-active\");\r\n\t\t\tgameVars.hintMode = !gameVars.hintMode;\r\n\t\t}\r\n\t})\r\n\r\n\tdocument.querySelectorAll(\"[data-modalopen]\").forEach(el => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tDOM.modals.container.classList.add(\"visible\");\r\n\t\t\tDOM.modals.container.classList.remove(\"fade\");\r\n\t\t\tdocument.querySelector(el.dataset.modalopen).classList.add(\"visible\");\r\n\t\t\tdocument.querySelector(el.dataset.modalopen).classList.remove(\"fade\");\r\n\t\t});\r\n\t});\r\n\tdocument.querySelectorAll(\".modal-close\").forEach(el => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tDOM.modals.container.classList.add(\"fade\");\r\n\t\t\tDOM.modals.container.classList.remove(\"visible\");\r\n\t\t\tel.parentNode.parentNode.classList.add(\"fade\");\r\n\t\t\tel.parentNode.parentNode.classList.remove(\"visible\");\r\n\t\t});\r\n\t});\r\n\r\n\tDOM.modals.settings.container.querySelector(\".modal-close\").addEventListener(\"click\", () => {\r\n\t\tif (gameVars.state != \"underway\") {\r\n\t\t\tnewGame();\r\n\t\t}\r\n\t})\r\n\r\n\tdocument.querySelectorAll(\".modal\").forEach(el => {\r\n\t\tel.addEventListener(\"click\", evt => {\r\n\t\t\tif (evt.target === evt.currentTarget) {\r\n\t\t\t\tDOM.modals.container.classList.add(\"fade\");\r\n\t\t\t\tDOM.modals.container.classList.remove(\"visible\");\r\n\t\t\t\tel.classList.add(\"fade\");\r\n\t\t\t\tel.classList.remove(\"visible\");\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\tDOM.modals.settings.container.addEventListener(\"click\", () => {\r\n\t\tif (gameVars.state != \"underway\") {\r\n\t\t\tnewGame();\r\n\t\t}\r\n\t})\r\n\tDOM.modals.menu.btns.querySelectorAll(\"button\").forEach((el) => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tDOM.modals.menu.container.classList.add(\"fade\");\r\n\t\t\tDOM.modals.menu.container.classList.remove(\"visible\");\r\n\t\t});\r\n\t});\r\n\r\n\tDOM.playarea.board.container.addEventListener(\"scroll\", () => {\r\n\t\tDOM.playarea.rowNums.scroll(0, DOM.playarea.board.container.scrollTop);\r\n\t\tDOM.playarea.columnNums.scroll(DOM.playarea.board.container.scrollLeft, 0);\r\n\t}, {\r\n\t\tpassive: true\r\n\t})\r\n\r\n\tDOM.playarea.winOverlay.newGameBtn.addEventListener(\"click\", () => {\r\n\t\tnewGame();\r\n\t\tDOM.playarea.winOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.winOverlay.container.classList.remove(\"visible\");\r\n\t});\r\n\tDOM.playarea.winOverlay.viewBoardBtn.addEventListener(\"click\", () => {\r\n\t\tDOM.playarea.winOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.winOverlay.container.classList.remove(\"visible\");\r\n\t});\r\n\tDOM.playarea.loseOverlay.newGameBtn.addEventListener(\"click\", () => {\r\n\t\tnewGame();\r\n\t\tDOM.playarea.loseOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.loseOverlay.container.classList.remove(\"visible\");\r\n\t});\r\n\tDOM.playarea.loseOverlay.viewBoardBtn.addEventListener(\"click\", () => {\r\n\t\tDOM.playarea.loseOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.loseOverlay.container.classList.remove(\"visible\");\r\n\t\tuncoverBoard();\r\n\t});\r\n\r\n\t// Settings event listeners\r\n\r\n\tDOM.modals.settings.boardSize.addEventListener(\"change\", evt => {\r\n\t\tsettings.boardSize = evt.target.value;\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\r\n\tconst numbersOnlyRegex = /^[0-9]+$/g;\r\n\r\n\tDOM.modals.settings.customBoard.columns.addEventListener(\"input\", evt => {\r\n\t\tevt.target.value = evt.target.value.match(numbersOnlyRegex);\r\n\t\tif (!evt.target.value) {\r\n\t\t\tsettings.board.columns = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t\tsettings.board.columns = parseInt(evt.target.value);\r\n\t\t} else {\r\n\t\t\tsettings.board.columns = parseInt(evt.target.value);\r\n\t\t}\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\tDOM.modals.settings.customBoard.columns.addEventListener(\"blur\", evt => {\r\n\t\tif (!evt.target.value || evt.target.value < 5) {\r\n\t\t\tevt.target.value = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t}\r\n\t\tsettings.board.columns = parseInt(evt.target.value);\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.modals.settings.customBoard.rows.addEventListener(\"input\", evt => {\r\n\t\tevt.target.value = evt.target.value.match(numbersOnlyRegex);\r\n\t\tif (evt.target.value == \"\") {\r\n\t\t\tsettings.board.rows = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t\tsettings.board.rows = parseInt(evt.target.value);\r\n\t\t} else {\r\n\t\t\tsettings.board.rows = parseInt(evt.target.value);\r\n\t\t}\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\tDOM.modals.settings.customBoard.rows.addEventListener(\"blur\", evt => {\r\n\t\tif (evt.target.value == \"\" || evt.target.value < 5) {\r\n\t\t\tevt.target.value = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t}\r\n\t\tsettings.board.rows = parseInt(evt.target.value);\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.modals.settings.customBoard.numOfMines.addEventListener(\"input\", evt => {\r\n\t\tif (evt.target.value > settings.maxMines) {\r\n\t\t\tevt.target.value = settings.maxMines;\r\n\t\t} else if (evt.target.value < 2 || !evt.target.value) {\r\n\t\t\tevt.target.value = 2;\r\n\t\t}\r\n\t\tsettings.board.numOfMines = parseInt(evt.target.value);\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t} else {\r\n\t\t\tgameVars.board.numOfMines = parseInt(evt.target.value);\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.nav.markSwapBtn.addEventListener(\"click\", () => {\r\n\t\tgameVars.clickSwap = !gameVars.clickSwap;\r\n\t\tif (gameVars.clickSwap) {\r\n\t\t\tDOM.nav.markSwapBtn.innerHTML = '<i class=\"icon-flag\"></i>';\r\n\t\t\tDOM.playarea.board.container.classList.add(\"no-scroll\");\r\n\t\t} else {\r\n\t\t\tDOM.nav.markSwapBtn.innerHTML = '<i class=\"icon-mine\"></i>';\r\n\t\t\tDOM.playarea.board.container.classList.remove(\"no-scroll\");\r\n\t\t}\r\n\t})\r\n\r\n\tconst mobileQuery = window.matchMedia('only screen and (max-width: 767px)');\r\n\tmobileQuery.addEventListener(\"change\", evt => {\r\n\t\tif (!evt.matches) {\r\n\t\t\tgameVars.clickSwap = false;\r\n\t\t\tDOM.playarea.board.container.classList.remove(\"no-scroll\");\r\n\t\t\tDOM.nav.markSwapBtn.innerHTML = '<i class=\"icon-mine\"></i>'\r\n\t\t}\r\n\t})\r\n\r\n\tfunction calculateMaxMines() {\r\n\t\tlet maxMines = Math.floor(settings.board.columns * settings.board.rows / 2);\r\n\t\tif (maxMines < 25) {\r\n\t\t\tmaxMines = 25;\r\n\t\t}\r\n\t\tDOM.modals.settings.customBoard.maxMines.innerHTML = settings.maxMines = maxMines;\r\n\t\tif (DOM.modals.settings.customBoard.numOfMines.value > settings.maxMines) {\r\n\t\t\tDOM.modals.settings.customBoard.numOfMines.value = settings.maxMines;\r\n\t\t}\r\n\t\tsettings.board.numOfMines = parseInt(DOM.modals.settings.customBoard.numOfMines.value);\r\n\t}\r\n\r\n\t// Handle showing custom board sizes\r\n\tDOM.modals.settings.boardSize.addEventListener(\"change\", evt => {\r\n\t\tDOM.modals.settings.customBoard.container.style.height = `${DOM.modals.settings.customBoard.container.scrollHeight}px`;\r\n\t\tif (evt.target.value == \"custom\") {\r\n\t\t\tDOM.modals.settings.customBoard.container.classList.add(\"open\");\r\n\t\t\tDOM.modals.settings.customBoard.container.addEventListener(\"transitionend\", () => {\r\n\t\t\t\tDOM.modals.settings.customBoard.container.style.removeProperty(\"height\");\r\n\t\t\t}, {\r\n\t\t\t\tonce: true\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tDOM.modals.settings.customBoard.container.classList.remove(\"open\");\r\n\t\t\twindow.setTimeout(() => {\r\n\t\t\t\tDOM.modals.settings.customBoard.container.style.removeProperty(\"height\");\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\tlet root = document.documentElement;\r\n\r\n\tDOM.modals.settings.tileSize.addEventListener(\"input\", evt => {\r\n\t\troot.style.setProperty('--tile-size', `${evt.target.value}px`);\r\n\t})\r\n\r\n\tnewGame();\r\n\r\n\tconst urlParams = new URLSearchParams(window.location.search);\r\n\tlet customBoardUnlimited = false;\r\n\tif (urlParams.has('customBoardUnlimited')) {\r\n\t\tbulkUnlimited = true;\r\n\t}\r\n\r\n\r\n\t// Value Bubbles for Range Inputs\r\n\t// https://codepen.io/chriscoyier/pen/eYNQyPe\r\n\r\n\tconst allRanges = document.querySelectorAll(\".range-wrap\");\r\n\tallRanges.forEach(wrap => {\r\n\t\tconst range = wrap.querySelector('[type=\"range\"]');\r\n\t\tconst bubble = wrap.querySelector(\".bubble\");\r\n\r\n\t\trange.addEventListener(\"input\", () => {\r\n\t\t\tsetBubble(range, bubble);\r\n\t\t});\r\n\t\tsetBubble(range, bubble);\r\n\t});\r\n\r\n\tfunction setBubble(range, bubble) {\r\n\t\tconst val = range.value;\r\n\t\tconst min = range.min ? range.min : 0;\r\n\t\tconst max = range.max ? range.max : 100;\r\n\t\tconst newVal = Number(((val - min) * 100) / (max - min));\r\n\t\tbubble.innerHTML = val;\r\n\r\n\t\t// Sorta magic numbers based on size of the native UI thumb\r\n\t\tbubble.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\r\n\t}\r\n\r\n\t// Xyzzy easter egg code\r\n\r\n\tlet xyzzyPassword = \"xyzzy\";\r\n\tlet passwordPosition = 0;\r\n\tlet xyzzyPixel = byId(\"xyzzypixel\");\r\n\tdocument.onkeydown = (evt) => {\r\n\t\tif (evt.key == xyzzyPassword[passwordPosition]) {\r\n\t\t\tpasswordPosition++;\r\n\t\t} else {\r\n\t\t\tpasswordPosition = 0;\r\n\t\t}\r\n\t\tif (passwordPosition >= 5) {\r\n\t\t\txyzzyInit();\r\n\t\t\tgameVars.xyzzyActivated = true;\r\n\t\t\tdocument.onkeydown = (evt) => {\r\n\t\t\t\tif (evt.key == \"Shift\") {\r\n\t\t\t\t\tgameVars.xyzzyShift = true;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tdocument.onkeyup = (evt) => {\r\n\t\t\t\tif (evt.key == \"Shift\") {\r\n\t\t\t\t\tgameVars.xyzzyShift = false;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tfunction xyzzyInit() {\r\n\t\tDOM.playarea.board.tiles.forEach((el) => {\r\n\t\t\tel.addEventListener(\"mouseover\", () => {\r\n\t\t\t\tif (gameVars.xyzzyShift) {\r\n\t\t\t\t\tif (board[el.dataset.row][el.dataset.column].hasMine) {\r\n\t\t\t\t\t\txyzzyPixel.style.backgroundColor = \"#000\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\txyzzyPixel.style.backgroundColor = \"#FFF\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n})();"],"names":["byId","id","document","getElementById","DOM","nav","menuBtn","settingsBtn","newGameBtn","mineCounter","querySelector","timer","minutes","seconds","hintBtn","markSwapBtn","playarea","columnNums","rowNums","board","tiles","container","winOverlay","viewBoardBtn","loseOverlay","modals","menu","btns","settings","boardSize","customBoard","rows","columns","numOfMines","maxMines","boardApplyWarning","tileSize","markCircleDiv","markCircle","Tile","[object Object]","gameVars","state","minesLeft","hints","hintMode","clickSwap","time","rowMineCount","columnMineCount","boardSizes","small","medium","large","verylarge","clockInterval","circumference","r","baseVal","value","Math","PI","setProgress","percent","offset","style","strokeDashoffset","checkIfTileHasMine","row","column","hasMine","countNearbyMines","count","i","j","numOfNearbyMines","getTileElement","tileClick","firstTileRow","firstTileColumn","values","push","Array","fill","firstTile","findIndex","tile","splice","i1","random","floor","length","parseInt","populateBoard","html","innerHTML","displayBorderNums","uncoverTile","setInterval","tickClock","xyzzyActivated","xyzzyInit","dataset","classList","remove","add","strokeDasharray","markMode","tileMark","uncovered","markedAsEmpty","console","log","fromMineClick","override","clickable","clearInterval","markCircleTimeout","multiTouch","markTouch","newGame","Object","assign","removeProperty","createEmptyBoard","querySelectorAll","addEventListener","evt","isPrimary","button","setTimeout","top","clientY","left","clientX","stroke","touchAction","target","releasePointerCapture","pointerId","clearTimeout","preventDefault","buttons","displayBoard","displayEmptyBorderNums","body","toggle","forEach","el","modalopen","parentNode","currentTarget","scroll","scrollTop","scrollLeft","passive","uncoverBoard","display","numbersOnlyRegex","match","customBoardUnlimited","calculateMaxMines","window","matchMedia","matches","height","scrollHeight","once","root","documentElement","setProperty","urlParams","URLSearchParams","location","search","has","bulkUnlimited","setBubble","range","bubble","val","min","max","newVal","Number","wrap","passwordPosition","xyzzyPixel","xyzzyShift","backgroundColor","onkeydown","key","evt1","onkeyup"],"version":3,"file":"index.976a0b81.js.map"}