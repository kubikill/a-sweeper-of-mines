{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["\"use strict\";\r\n\r\n(function () {\r\n\tfunction byId(id) {\r\n\t\treturn document.getElementById(id);\r\n\t}\r\n\tconst DOM = {\r\n\t\tnav: {\r\n\t\t\tmenuBtn: byId(\"menu-btn\"),\r\n\t\t\tsettingsBtn: byId(\"settings-btn\"),\r\n\t\t\tnewGameBtn: byId(\"newgame-btn\"),\r\n\t\t\tmineCounter: document.querySelector(\"#mine-counter > span\"),\r\n\t\t\ttimer: {\r\n\t\t\t\tminutes: byId(\"timer-minutes\"),\r\n\t\t\t\tseconds: byId(\"timer-seconds\"),\r\n\t\t\t},\r\n\t\t\thintBtn: byId(\"hint-btn\"),\r\n\t\t\tmarkSwapBtn: byId(\"mark-btn\")\r\n\t\t},\r\n\t\tplayarea: {\r\n\t\t\tcolumnNums: byId(\"column-nums\"),\r\n\t\t\trowNums: byId(\"row-nums\"),\r\n\t\t\tboard: {\r\n\t\t\t\ttiles: null,\r\n\t\t\t\tcontainer: byId(\"board\"),\r\n\t\t\t},\r\n\t\t\twinOverlay: {\r\n\t\t\t\tcontainer: byId(\"win-overlay\"),\r\n\t\t\t\tnewGameBtn: byId(\"win-new-game-btn\"),\r\n\t\t\t\tviewBoardBtn: byId(\"win-view-board-btn\"),\r\n\t\t\t},\r\n\t\t\tloseOverlay: {\r\n\t\t\t\tcontainer: byId(\"lose-overlay\"),\r\n\t\t\t\tnewGameBtn: byId(\"lose-new-game-btn\"),\r\n\t\t\t\tviewBoardBtn: byId(\"lose-view-board-btn\"),\r\n\t\t\t},\r\n\t\t},\r\n\t\tmodals: {\r\n\t\t\tcontainer: byId(\"modals\"),\r\n\t\t\tmenu: {\r\n\t\t\t\tcontainer: byId(\"menu-modal\"),\r\n\t\t\t\tbtns: byId(\"menu-modal-btns\"),\r\n\t\t\t},\r\n\t\t\tsettings: {\r\n\t\t\t\tcontainer: byId(\"settings-modal\"),\r\n\t\t\t\tboardSize: byId(\"settings-boardSize\"),\r\n\t\t\t\tcustomBoard: {\r\n\t\t\t\t\tcontainer: byId(\"settings-customBoard\"),\r\n\t\t\t\t\trows: byId(\"settings-boardHeight\"),\r\n\t\t\t\t\tcolumns: byId(\"settings-boardWidth\"),\r\n\t\t\t\t\tnumOfMines: byId(\"settings-mineNum\"),\r\n\t\t\t\t\tmaxMines: byId(\"settings-maxMines\")\r\n\t\t\t\t},\r\n\t\t\t\tboardApplyWarning: byId(\"settings-applywarning\"),\r\n\t\t\t\ttileSize: byId(\"settings-tileSize\"),\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\tlet board = [];\r\n\r\n\tclass Tile {\r\n\t\tuncovered = false;\r\n\t\thasMine = false;\r\n\t\tnumOfNearbyMines = 0;\r\n\t\tmarkedAsEmpty = false;\r\n\t};\r\n\r\n\tconst gameVars = {\r\n\t\tstate: \"initial\", // 3 states available: initial (new game started, waiting for player to uncover first tile), underway (game in progress), finished (game won or lost, no input allowed on board)\r\n\t\tminesLeft: 20,\r\n\t\thints: 1,\r\n\t\thintMode: false,\r\n\t\ttime: {\r\n\t\t\tminutes: 0,\r\n\t\t\tseconds: 0,\r\n\t\t},\r\n\t\tboard: {\r\n\t\t\trows: 10,\r\n\t\t\tcolumns: 10,\r\n\t\t\tnumOfMines: 20,\r\n\t\t},\r\n\t\tboardSize: \"small\",\r\n\t\trowMineCount: [],\r\n\t\tcolumnMineCount: [],\r\n\t};\r\n\r\n\tlet settings = {\r\n\t\tboard: {\r\n\t\t\trows: 10,\r\n\t\t\tcolumns: 10,\r\n\t\t\tnumOfMines: 20,\r\n\t\t},\r\n\t\tboardSize: \"small\",\r\n\t\tmaxMines: 50\r\n\t};\r\n\r\n\tconst boardSizes = {\r\n\t\tsmall: {\r\n\t\t\trows: 10,\r\n\t\t\tcolumns: 10,\r\n\t\t\tnumOfMines: 20,\r\n\t\t},\r\n\t\tmedium: {\r\n\t\t\trows: 15,\r\n\t\t\tcolumns: 15,\r\n\t\t\tnumOfMines: 50,\r\n\t\t},\r\n\t\tlarge: {\r\n\t\t\trows: 20,\r\n\t\t\tcolumns: 20,\r\n\t\t\tnumOfMines: 90\r\n\t\t},\r\n\t\tverylarge: {\r\n\t\t\trows: 30,\r\n\t\t\tcolumns: 30,\r\n\t\t\tnumOfMines: 200\r\n\t\t}\r\n\t}\r\n\r\n\tlet statistics = {\r\n\t\tsmall: {\r\n\t\t\t// Games won/lost/played, best time, longest winning/losing streaks, current streak\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: \"\",\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0\r\n\t\t},\r\n\t\tmedium: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: \"\",\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0\r\n\t\t},\r\n\t\tlarge: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: \"\",\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0\r\n\t\t},\r\n\t\tcustom: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0\r\n\t\t},\r\n\t};\r\n\r\n\tlet clockInterval;\r\n\r\n\tfunction createEmptyBoard() {\r\n\t\tboard = [];\r\n\t\tfor (let i = 0; i < gameVars.board.rows; i++) {\r\n\t\t\tboard[i] = [];\r\n\t\t\tfor (let j = 0; j < gameVars.board.columns; j++) {\r\n\t\t\t\tboard[i][j] = new Tile();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction populateBoard(firstTileRow, firstTileColumn, numOfMines) {\r\n\t\tlet values = [];\r\n\t\tfor (let i = 0; i < gameVars.board.rows; i++) {\r\n\t\t\tfor (let j = 0; j < gameVars.board.columns; j++) {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\trow: i,\r\n\t\t\t\t\tcolumn: j\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tgameVars.rowMineCount = new Array(gameVars.board.rows).fill(0);\r\n\t\tgameVars.columnMineCount = new Array(gameVars.board.columns).fill(0);\r\n\r\n\t\tlet firstTile = values.findIndex((tile) => {\r\n\t\t\treturn tile.row == firstTileRow && tile.column == firstTileColumn;\r\n\t\t});\r\n\r\n\t\tif (firstTile != -1) {\r\n\t\t\tvalues.splice(firstTile, 1);\r\n\t\t}\r\n\t\tboard[firstTileRow][firstTileColumn].hasMine = true;\r\n\r\n\t\tfor (let i = 1; i < numOfMines; i++) {\r\n\t\t\tlet random = Math.floor(Math.random() * values.length);\r\n\t\t\tboard[values[random].row][values[random].column].hasMine = true;\r\n\t\t\tvalues.splice(random, 1);\r\n\t\t}\r\n\r\n\t\t// Assign numbers to each tile, and count mines in each row and column\r\n\t\tconsole.log(gameVars);\r\n\t\tfor (let row in board) {\r\n\t\t\tfor (let column in board[row]) {\r\n\t\t\t\tcountNearbyMines(parseInt(row), parseInt(column));\r\n\t\t\t\tif (board[row][column].hasMine) {\r\n\t\t\t\t\tgameVars.rowMineCount[row]++;\r\n\t\t\t\t\tgameVars.columnMineCount[column]++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction checkIfTileHasMine(row, column) {\r\n\t\tif (\r\n\t\t\trow < 0 ||\r\n\t\t\trow >= gameVars.board.rows ||\r\n\t\t\tcolumn < 0 ||\r\n\t\t\tcolumn >= gameVars.board.columns ||\r\n\t\t\t!board[row][column].hasMine\r\n\t\t) {\r\n\t\t\treturn 0;\r\n\t\t} else {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction countNearbyMines(row, column) {\r\n\t\tlet count = 0;\r\n\t\tfor (let i = -1; i <= 1; i++) {\r\n\t\t\tfor (let j = -1; j <= 1; j++) {\r\n\t\t\t\tif (i == 0 && j == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tcount += checkIfTileHasMine(row + i, column + j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tboard[row][column].numOfNearbyMines = count;\r\n\t}\r\n\r\n\tfunction getTileElement(row, column) {\r\n\t\treturn DOM.playarea.board.container.querySelector(\r\n\t\t\t`[data-row=\"${row}\"][data-column=\"${column}\"]`\r\n\t\t);\r\n\t}\r\n\r\n\tfunction tileClick(row, column) {\r\n\t\tif (gameVars.state == \"initial\") {\r\n\t\t\tgameVars.state = \"underway\";\r\n\t\t\tpopulateBoard(row, column, gameVars.board.numOfMines);\r\n\t\t\tdisplayBorderNums();\r\n\t\t\tuncoverTile(row, column);\r\n\t\t\tDOM.nav.mineCounter.innerHTML = gameVars.minesLeft;\r\n\t\t\tclockInterval = setInterval(tickClock, 1000);\r\n\t\t\tif (gameVars.xyzzyActivated) {\r\n\t\t\t\txyzzyInit();\r\n\t\t\t}\r\n\t\t} else if (gameVars.state == \"underway\") {\r\n\t\t\tif (gameVars.hintMode == true) {\r\n\t\t\t\tuncoverTile(row, column, true);\r\n\t\t\t\tgameVars.hints -= 1;\r\n\t\t\t\tDOM.nav.hintBtn.dataset.hints = gameVars.hints;\r\n\t\t\t\tif (gameVars.hints <= 0) {\r\n\t\t\t\t\tDOM.nav.hintBtn.classList.remove(\"hint-active\");\r\n\t\t\t\t\tDOM.nav.hintBtn.classList.add(\"hint-disabled\");\r\n\t\t\t\t\tgameVars.hintMode = false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tuncoverTile(row, column);\r\n\t\t\t}\r\n\t\t\tDOM.nav.mineCounter.innerHTML = gameVars.minesLeft;\r\n\t\t}\r\n\t}\r\n\r\n\tlet markMode = \"none\";\r\n\r\n\tfunction tileMark(row, column) {\r\n\t\tconsole.log(markMode);\r\n\t\tif (gameVars.state == \"underway\" && !board[row][column].uncovered) {\r\n\t\t\tif (!board[row][column].markedAsEmpty) {\r\n\t\t\t\tif (markMode == \"none\") {\r\n\t\t\t\t\tmarkMode = \"mark\";\r\n\t\t\t\t}\r\n\t\t\t\tif (markMode == \"mark\") {\r\n\t\t\t\t\tboard[row][column].markedAsEmpty = true;\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = '<i class=\"icon-flag\"></i>';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (markMode == \"none\") {\r\n\t\t\t\t\tmarkMode = \"remove\";\r\n\t\t\t\t}\r\n\t\t\t\tif (markMode == \"remove\") {\r\n\t\t\t\t\tboard[row][column].markedAsEmpty = false;\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction uncoverTile(row, column, fromMineClick = false, override = false) {\r\n\t\tif (\r\n\t\t\t(gameVars.state != \"underway\" && !override) ||\r\n\t\t\trow < 0 ||\r\n\t\t\trow >= gameVars.board.rows ||\r\n\t\t\tcolumn < 0 ||\r\n\t\t\tcolumn >= gameVars.board.columns ||\r\n\t\t\tboard[row][column].uncovered\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (board[row][column].hasMine && !board[row][column].markedAsEmpty) {\r\n\t\t\tgetTileElement(row, column).innerHTML = \"<i class='icon-mine'></i>\";\r\n\t\t\tgetTileElement(row, column).dataset.clickable = \"false\";\r\n\t\t\tboard[row][column].uncovered = true;\r\n\t\t\tfor (let i = -1; i <= 1; i++) {\r\n\t\t\t\tfor (let j = -1; j <= 1; j++) {\r\n\t\t\t\t\tif (i == 0 && j == 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tuncoverTile(row + i, column + j, true, override);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgameVars.minesLeft--;\r\n\t\t\tif (gameVars.minesLeft == 0 && gameVars.state == \"underway\") {\r\n\t\t\t\tDOM.playarea.winOverlay.container.classList.remove(\"fade\");\r\n\t\t\t\tDOM.playarea.winOverlay.container.classList.add(\"visible\");\r\n\t\t\t\tDOM.playarea.board.container.classList.add(\"no-input\");\r\n\t\t\t\tgameVars.state = \"finished\";\r\n\t\t\t\tclearInterval(clockInterval);\r\n\t\t\t}\r\n\t\t} else if (fromMineClick) {\r\n\t\t\tboard[row][column].uncovered = true;\r\n\t\t\tboard[row][column].markedAsEmpty = false;\r\n\t\t\tgetTileElement(row, column).innerHTML = board[row][column].numOfNearbyMines;\r\n\t\t\tgetTileElement(row, column).dataset.clickable = \"false\";\r\n\t\t} else if (\r\n\t\t\t!board[row][column].markedAsEmpty &&\r\n\t\t\tgameVars.state == \"underway\"\r\n\t\t) {\r\n\t\t\tgetTileElement(row, column).classList.add(\"wrong-tile\");\r\n\t\t\tDOM.playarea.loseOverlay.container.classList.remove(\"fade\");\r\n\t\t\tDOM.playarea.loseOverlay.container.classList.add(\"visible\");\r\n\t\t\tDOM.playarea.board.container.classList.add(\"no-input\");\r\n\t\t\tgameVars.state = \"finished\";\r\n\t\t\tclearInterval(clockInterval);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction uncoverBoard() {\r\n\t\tfor (let row in board) {\r\n\t\t\tfor (let column in board[row]) {\r\n\t\t\t\tif (board[row][column].hasMine && !board[row][column].uncovered) {\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = \"<i class='icon-mine'></i>\";\r\n\t\t\t\t\tgetTileElement(row, column).dataset.clickable = \"false\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = board[row][column].numOfNearbyMines;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction tickClock() {\r\n\t\tgameVars.time.seconds++;\r\n\t\tif (gameVars.time.seconds >= 60) {\r\n\t\t\tgameVars.time.seconds -= 60;\r\n\t\t\tgameVars.time.minutes++;\r\n\t\t}\r\n\r\n\t\tif (gameVars.time.minutes <= 9) {\r\n\t\t\tDOM.nav.timer.minutes.innerHTML = `0${gameVars.time.minutes}`;\r\n\t\t} else {\r\n\t\t\tDOM.nav.timer.minutes.innerHTML = gameVars.time.minutes;\r\n\t\t}\r\n\t\tif (gameVars.time.seconds <= 9) {\r\n\t\t\tDOM.nav.timer.seconds.innerHTML = `0${gameVars.time.seconds}`;\r\n\t\t} else {\r\n\t\t\tDOM.nav.timer.seconds.innerHTML = gameVars.time.seconds;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction displayEmptyBorderNums() {\r\n\t\tlet html = \"\";\r\n\r\n\t\tfor (let i = 0; i < gameVars.board.rows; i++) {\r\n\t\t\thtml += `<div>#</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.rowNums.innerHTML = html;\r\n\t\thtml = \"\";\r\n\r\n\t\tfor (let i = 0; i < gameVars.board.columns; i++) {\r\n\t\t\thtml += `<div>#</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.columnNums.innerHTML = html;\r\n\t}\r\n\r\n\tfunction displayBorderNums() {\r\n\t\tlet html = \"\";\r\n\r\n\t\tfor (let row of gameVars.rowMineCount) {\r\n\t\t\thtml += `<div>${row}</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.rowNums.innerHTML = html;\r\n\t\thtml = \"\";\r\n\r\n\t\tfor (let column of gameVars.columnMineCount) {\r\n\t\t\thtml += `<div>${column}</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.columnNums.innerHTML = html;\r\n\t}\r\n\r\n\tfunction displayBoard() {\r\n\t\tlet html = \"\";\r\n\t\tfor (let row in board) {\r\n\t\t\thtml += `<div>`;\r\n\t\t\tfor (let column in board[row]) {\r\n\t\t\t\thtml += `<div data-row=\"${row}\" data-column=\"${column}\"></div>`;\r\n\t\t\t}\r\n\t\t\thtml += \"</div>\";\r\n\t\t}\r\n\t\tDOM.playarea.board.container.innerHTML = html;\r\n\t\tDOM.playarea.board.tiles = document.querySelectorAll(\r\n\t\t\t\"[data-row][data-column]\"\r\n\t\t);\r\n\r\n\t\tfor (let tile of DOM.playarea.board.tiles) {\r\n\t\t\ttile.addEventListener(\"mousedown\", (evt) => {\r\n\t\t\t\tswitch (evt.which) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\ttileClick(parseInt(tile.dataset.row), parseInt(tile.dataset.column));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\ttileMark(parseInt(tile.dataset.row), parseInt(tile.dataset.column), true);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttile.addEventListener(\"contextmenu\", (evt) => {\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t\ttile.addEventListener(\"mouseenter\", (evt) => {\r\n\t\t\t\tif (evt.which == 3) {\r\n\t\t\t\t\ttileMark(parseInt(tile.dataset.row), parseInt(tile.dataset.column));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.body.addEventListener(\"mouseup\", () => {\r\n\t\tmarkMode = \"none\";\r\n\t})\r\n\r\n\tfunction newGame() {\r\n\t\tgameVars.boardSize = settings.boardSize;\r\n\t\tif (settings.boardSize != \"custom\") {\r\n\t\t\tObject.assign(gameVars.board, boardSizes[gameVars.boardSize]);\r\n\t\t} else {\r\n\t\t\tObject.assign(gameVars.board, settings.board);\r\n\t\t}\r\n\t\tDOM.modals.settings.boardApplyWarning.style.removeProperty(\"display\");\r\n\t\tgameVars.hints = 1 + Math.floor(gameVars.board.columns * gameVars.board.rows / 400);\r\n\t\tgameVars.hintMode = false;\r\n\t\tDOM.nav.hintBtn.dataset.hints = gameVars.hints;\r\n\t\tDOM.nav.hintBtn.classList.remove(\"hint-active\");\r\n\t\tDOM.nav.hintBtn.classList.remove(\"hint-disabled\");\r\n\t\tcreateEmptyBoard();\r\n\t\tdisplayBoard();\r\n\t\tdisplayEmptyBorderNums();\r\n\t\tgameVars.state = \"initial\";\r\n\t\tclearInterval(clockInterval);\r\n\t\tgameVars.time.minutes = gameVars.time.seconds = 0;\r\n\t\tDOM.nav.timer.minutes.innerHTML = DOM.nav.timer.seconds.innerHTML = \"00\";\r\n\t\tDOM.playarea.board.container.classList.remove(\"no-input\");\r\n\t\tDOM.nav.mineCounter.innerHTML = gameVars.minesLeft = gameVars.board.numOfMines;\r\n\t\tconsole.log(gameVars);\r\n\t}\r\n\r\n\tDOM.nav.newGameBtn.addEventListener(\"click\", () => {\r\n\t\tnewGame();\r\n\t});\r\n\r\n\tDOM.nav.hintBtn.addEventListener(\"click\", () => {\r\n\t\tif (gameVars.hints >= 1) {\r\n\t\t\tDOM.nav.hintBtn.classList.toggle(\"hint-active\");\r\n\t\t\tgameVars.hintMode = !gameVars.hintMode;\r\n\t\t}\r\n\t})\r\n\r\n\tdocument.querySelectorAll(\"[data-modalopen]\").forEach(el => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tDOM.modals.container.classList.add(\"visible\");\r\n\t\t\tDOM.modals.container.classList.remove(\"fade\");\r\n\t\t\tdocument.querySelector(el.dataset.modalopen).classList.add(\"visible\");\r\n\t\t\tdocument.querySelector(el.dataset.modalopen).classList.remove(\"fade\");\r\n\t\t});\r\n\t});\r\n\tdocument.querySelectorAll(\".modal-close\").forEach(el => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tDOM.modals.container.classList.add(\"fade\");\r\n\t\t\tDOM.modals.container.classList.remove(\"visible\");\r\n\t\t\tel.parentNode.parentNode.classList.add(\"fade\");\r\n\t\t\tel.parentNode.parentNode.classList.remove(\"visible\");\r\n\t\t});\r\n\t});\r\n\t\r\n\tDOM.modals.settings.container.querySelector(\".modal-close\").addEventListener(\"click\", () => {\r\n\t\tif (gameVars.state != \"underway\") {\r\n\t\t\tnewGame();\r\n\t\t}\r\n\t})\r\n\r\n\tdocument.querySelectorAll(\".modal\").forEach(el => {\r\n\t\tel.addEventListener(\"click\", evt => {\r\n\t\t\tif (evt.target === evt.currentTarget) {\r\n\t\t\t\tDOM.modals.container.classList.add(\"fade\");\r\n\t\t\t\tDOM.modals.container.classList.remove(\"visible\");\r\n\t\t\t\tel.classList.add(\"fade\");\r\n\t\t\t\tel.classList.remove(\"visible\");\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\tDOM.modals.settings.container.addEventListener(\"click\", () => {\r\n\t\tif (gameVars.state != \"underway\") {\r\n\t\t\tnewGame();\r\n\t\t}\r\n\t})\r\n\tDOM.modals.menu.btns.querySelectorAll(\"button\").forEach((el) => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tDOM.modals.menu.container.classList.add(\"fade\");\r\n\t\t\tDOM.modals.menu.container.classList.remove(\"visible\");\r\n\t\t});\r\n\t});\r\n\r\n\tDOM.playarea.board.container.addEventListener(\"scroll\", () => {\r\n\t\tDOM.playarea.rowNums.scroll(0, DOM.playarea.board.container.scrollTop);\r\n\t\tDOM.playarea.columnNums.scroll(DOM.playarea.board.container.scrollLeft, 0);\r\n\t}, {\r\n\t\tpassive: true\r\n\t})\r\n\r\n\tDOM.playarea.winOverlay.newGameBtn.addEventListener(\"click\", () => {\r\n\t\tnewGame();\r\n\t\tDOM.playarea.winOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.winOverlay.container.classList.remove(\"visible\");\r\n\t});\r\n\tDOM.playarea.winOverlay.viewBoardBtn.addEventListener(\"click\", () => {\r\n\t\tDOM.playarea.winOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.winOverlay.container.classList.remove(\"visible\");\r\n\t});\r\n\tDOM.playarea.loseOverlay.newGameBtn.addEventListener(\"click\", () => {\r\n\t\tnewGame();\r\n\t\tDOM.playarea.loseOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.loseOverlay.container.classList.remove(\"visible\");\r\n\t});\r\n\tDOM.playarea.loseOverlay.viewBoardBtn.addEventListener(\"click\", () => {\r\n\t\tDOM.playarea.loseOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.loseOverlay.container.classList.remove(\"visible\");\r\n\t\tuncoverBoard();\r\n\t});\r\n\r\n\t// Settings event listeners\r\n\r\n\tDOM.modals.settings.boardSize.addEventListener(\"change\", evt => {\r\n\t\tsettings.boardSize = evt.target.value;\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\r\n\tconst numbersOnlyRegex = /^[0-9]+$/g;\r\n\r\n\tDOM.modals.settings.customBoard.columns.addEventListener(\"input\", evt => {\r\n\t\tevt.target.value = evt.target.value.match(numbersOnlyRegex);\r\n\t\tif (!evt.target.value) {\r\n\t\t\tsettings.board.columns = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t\tsettings.board.columns = parseInt(evt.target.value);\r\n\t\t} else {\r\n\t\t\tsettings.board.columns = parseInt(evt.target.value);\r\n\t\t}\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\tDOM.modals.settings.customBoard.columns.addEventListener(\"blur\", evt => {\r\n\t\tif (!evt.target.value || evt.target.value < 5) {\r\n\t\t\tevt.target.value = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t}\r\n\t\tsettings.board.columns = parseInt(evt.target.value);\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.modals.settings.customBoard.rows.addEventListener(\"input\", evt => {\r\n\t\tevt.target.value = evt.target.value.match(numbersOnlyRegex);\r\n\t\tif (evt.target.value == \"\") {\r\n\t\t\tsettings.board.rows = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t\tsettings.board.rows = parseInt(evt.target.value);\r\n\t\t} else {\r\n\t\t\tsettings.board.rows = parseInt(evt.target.value);\r\n\t\t}\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\tDOM.modals.settings.customBoard.rows.addEventListener(\"blur\", evt => {\r\n\t\tif (evt.target.value == \"\" || evt.target.value < 5) {\r\n\t\t\tevt.target.value = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t}\r\n\t\tsettings.board.rows = parseInt(evt.target.value);\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.modals.settings.customBoard.numOfMines.addEventListener(\"input\", evt => {\r\n\t\tif (evt.target.value > settings.maxMines) {\r\n\t\t\tevt.target.value = settings.maxMines;\r\n\t\t} else if (evt.target.value < 2 || !evt.target.value) {\r\n\t\t\tevt.target.value = 2;\r\n\t\t}\r\n\t\tsettings.board.numOfMines = parseInt(evt.target.value);\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t} else {\r\n\t\t\tgameVars.board.numOfMines = parseInt(evt.target.value);\r\n\t\t}\r\n\t})\r\n\r\n\tfunction calculateMaxMines() {\r\n\t\tconsole.log(settings);\r\n\t\tlet maxMines = Math.floor(settings.board.columns * settings.board.rows / 2);\r\n\t\tif (maxMines < 25) {\r\n\t\t\tmaxMines = 25;\r\n\t\t}\r\n\t\tDOM.modals.settings.customBoard.maxMines.innerHTML = settings.maxMines = maxMines;\r\n\t\tif (DOM.modals.settings.customBoard.numOfMines.value > settings.maxMines) {\r\n\t\t\tDOM.modals.settings.customBoard.numOfMines.value = settings.maxMines;\r\n\t\t}\r\n\t\tsettings.board.numOfMines = parseInt(DOM.modals.settings.customBoard.numOfMines.value);\r\n\t}\r\n\r\n\t// Handle showing custom board sizes\r\n\tDOM.modals.settings.boardSize.addEventListener(\"change\", evt => {\r\n\t\tDOM.modals.settings.customBoard.container.style.height = `${DOM.modals.settings.customBoard.container.scrollHeight}px`;\r\n\t\tif (evt.target.value == \"custom\") {\r\n\t\t\tDOM.modals.settings.customBoard.container.classList.add(\"open\");\r\n\t\t\tDOM.modals.settings.customBoard.container.addEventListener(\"transitionend\", () => {\r\n\t\t\t\tDOM.modals.settings.customBoard.container.style.removeProperty(\"height\");\r\n\t\t\t}, {\r\n\t\t\t\tonce: true\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tDOM.modals.settings.customBoard.container.classList.remove(\"open\");\r\n\t\t\twindow.setTimeout(() => {\r\n\t\t\t\tDOM.modals.settings.customBoard.container.style.removeProperty(\"height\");\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\tlet root = document.documentElement;\r\n\r\n\tDOM.modals.settings.tileSize.addEventListener(\"input\", evt => {\r\n\t\troot.style.setProperty('--tile-size', `${evt.target.value}px`);\r\n\t})\r\n\r\n\tnewGame();\r\n\r\n\tconst urlParams = new URLSearchParams(window.location.search);\r\n\tlet customBoardUnlimited = false;\r\n\tif (urlParams.has('customBoardUnlimited')) {\r\n\t    bulkUnlimited = true;\r\n\t}\r\n\r\n\t// Value Bubbles for Range Inputs\r\n\t// https://codepen.io/chriscoyier/pen/eYNQyPe\r\n\r\n\tconst allRanges = document.querySelectorAll(\".range-wrap\");\r\n\tallRanges.forEach(wrap => {\r\n\t\tconst range = wrap.querySelector('[type=\"range\"]');\r\n\t\tconst bubble = wrap.querySelector(\".bubble\");\r\n\r\n\t\trange.addEventListener(\"input\", () => {\r\n\t\t\tsetBubble(range, bubble);\r\n\t\t});\r\n\t\tsetBubble(range, bubble);\r\n\t});\r\n\r\n\tfunction setBubble(range, bubble) {\r\n\t\tconst val = range.value;\r\n\t\tconst min = range.min ? range.min : 0;\r\n\t\tconst max = range.max ? range.max : 100;\r\n\t\tconst newVal = Number(((val - min) * 100) / (max - min));\r\n\t\tbubble.innerHTML = val;\r\n\r\n\t\t// Sorta magic numbers based on size of the native UI thumb\r\n\t\tbubble.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\r\n\t}\r\n\r\n\t// Xyzzy easter egg code\r\n\r\n\tlet xyzzyPassword = \"xyzzy\";\r\n\tlet passwordPosition = 0;\r\n\tlet xyzzyPixel = byId(\"xyzzypixel\");\r\n\tdocument.onkeydown = (evt) => {\r\n\t\tif (evt.key == xyzzyPassword[passwordPosition]) {\r\n\t\t\tpasswordPosition++;\r\n\t\t} else {\r\n\t\t\tpasswordPosition = 0;\r\n\t\t}\r\n\t\tif (passwordPosition >= 5) {\r\n\t\t\txyzzyInit();\r\n\t\t\tgameVars.xyzzyActivated = true;\r\n\t\t\tdocument.onkeydown = (evt) => {\r\n\t\t\t\tif (evt.key == \"Shift\") {\r\n\t\t\t\t\tgameVars.xyzzyShift = true;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tdocument.onkeyup = (evt) => {\r\n\t\t\t\tif (evt.key == \"Shift\") {\r\n\t\t\t\t\tgameVars.xyzzyShift = false;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tfunction xyzzyInit() {\r\n\t\tDOM.playarea.board.tiles.forEach((el) => {\r\n\t\t\tel.addEventListener(\"mouseover\", () => {\r\n\t\t\t\tif (gameVars.xyzzyShift) {\r\n\t\t\t\t\tif (board[el.dataset.row][el.dataset.column].hasMine) {\r\n\t\t\t\t\t\txyzzyPixel.style.backgroundColor = \"#000\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\txyzzyPixel.style.backgroundColor = \"#FFF\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n})();"],"names":["byId","id","document","getElementById","DOM","nav","menuBtn","settingsBtn","newGameBtn","mineCounter","querySelector","timer","minutes","seconds","hintBtn","markSwapBtn","playarea","columnNums","rowNums","board","tiles","container","winOverlay","viewBoardBtn","loseOverlay","modals","menu","btns","settings","boardSize","customBoard","rows","columns","numOfMines","maxMines","boardApplyWarning","tileSize","Tile","[object Object]","gameVars","state","minesLeft","hints","hintMode","time","rowMineCount","columnMineCount","boardSizes","small","medium","large","verylarge","clockInterval","checkIfTileHasMine","row","column","hasMine","countNearbyMines","count","i","j","numOfNearbyMines","getTileElement","tileClick","firstTileRow","firstTileColumn","values","push","Array","fill","firstTile","findIndex","tile","splice","i1","random","Math","floor","length","console","log","parseInt","populateBoard","html","innerHTML","displayBorderNums","uncoverTile","setInterval","tickClock","xyzzyActivated","xyzzyInit","dataset","classList","remove","add","markMode","tileMark","uncovered","markedAsEmpty","fromMineClick","override","clickable","clearInterval","newGame","Object","assign","style","removeProperty","createEmptyBoard","querySelectorAll","addEventListener","evt","which","preventDefault","displayBoard","displayEmptyBorderNums","body","toggle","forEach","el","modalopen","parentNode","target","currentTarget","scroll","scrollTop","scrollLeft","passive","uncoverBoard","value","display","numbersOnlyRegex","calculateMaxMines","match","customBoardUnlimited","height","scrollHeight","once","window","setTimeout","root","documentElement","setProperty","urlParams","URLSearchParams","location","search","has","bulkUnlimited","setBubble","range","bubble","val","min","max","newVal","Number","left","wrap","passwordPosition","xyzzyPixel","xyzzyShift","backgroundColor","onkeydown","key","evt1","onkeyup"],"version":3,"file":"index.4fdef9cc.js.map"}