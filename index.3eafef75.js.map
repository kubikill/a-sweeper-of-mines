{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["\"use strict\";\r\n\r\n(function () {\r\n\tfunction byId(id) {\r\n\t\treturn document.getElementById(id);\r\n\t}\r\n\tconst DOM = {\r\n\t\tnav: {\r\n\t\t\tmenuBtn: byId(\"menu-btn\"),\r\n\t\t\tsettingsBtn: byId(\"settings-btn\"),\r\n\t\t\tnewGameBtn: byId(\"newgame-btn\"),\r\n\t\t\tmineCounter: document.querySelector(\"#mine-counter > span\"),\r\n\t\t\ttimer: {\r\n\t\t\t\tminutes: byId(\"timer-minutes\"),\r\n\t\t\t\tseconds: byId(\"timer-seconds\"),\r\n\t\t\t},\r\n\t\t\thintBtn: byId(\"hint-btn\"),\r\n\t\t\tmarkSwapBtn: byId(\"mark-btn\")\r\n\t\t},\r\n\t\tplayarea: {\r\n\t\t\tcolumnNums: byId(\"column-nums\"),\r\n\t\t\trowNums: byId(\"row-nums\"),\r\n\t\t\tboard: {\r\n\t\t\t\ttiles: null,\r\n\t\t\t\tcontainer: byId(\"board\"),\r\n\t\t\t},\r\n\t\t\twinOverlay: {\r\n\t\t\t\tcontainer: byId(\"win-overlay\"),\r\n\t\t\t\tnewGameBtn: byId(\"win-new-game-btn\"),\r\n\t\t\t\tviewBoardBtn: byId(\"win-view-board-btn\"),\r\n\t\t\t},\r\n\t\t\tloseOverlay: {\r\n\t\t\t\tcontainer: byId(\"lose-overlay\"),\r\n\t\t\t\tnewGameBtn: byId(\"lose-new-game-btn\"),\r\n\t\t\t\tviewBoardBtn: byId(\"lose-view-board-btn\"),\r\n\t\t\t},\r\n\t\t},\r\n\t\tmodals: {\r\n\t\t\tcontainer: byId(\"modals\"),\r\n\t\t\tmenu: {\r\n\t\t\t\tcontainer: byId(\"menu-modal\"),\r\n\t\t\t\tbtns: byId(\"menu-modal-btns\"),\r\n\t\t\t},\r\n\t\t\tsettings: {\r\n\t\t\t\tcontainer: byId(\"settings-modal\"),\r\n\t\t\t\tboardSize: byId(\"settings-boardSize\"),\r\n\t\t\t\tcustomBoard: {\r\n\t\t\t\t\tcontainer: byId(\"settings-customBoard\"),\r\n\t\t\t\t\trows: byId(\"settings-boardHeight\"),\r\n\t\t\t\t\tcolumns: byId(\"settings-boardWidth\"),\r\n\t\t\t\t\tnumOfMines: byId(\"settings-mineNum\"),\r\n\t\t\t\t\tmaxMines: byId(\"settings-maxMines\")\r\n\t\t\t\t},\r\n\t\t\t\tboardApplyWarning: byId(\"settings-applywarning\"),\r\n\t\t\t\ttileSize: byId(\"settings-tileSize\"),\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\tlet board = [];\r\n\r\n\tclass Tile {\r\n\t\tuncovered = false;\r\n\t\thasMine = false;\r\n\t\tnumOfNearbyMines = 0;\r\n\t\tmarkedAsEmpty = false;\r\n\t};\r\n\r\n\tconst gameVars = {\r\n\t\tstate: \"initial\", // 3 states available: initial (new game started, waiting for player to uncover first tile), underway (game in progress), finished (game won or lost, no input allowed on board)\r\n\t\tminesLeft: 20,\r\n\t\thints: 1,\r\n\t\thintMode: false,\r\n\t\tclickSwap: false,\r\n\t\ttime: {\r\n\t\t\tminutes: 0,\r\n\t\t\tseconds: 0,\r\n\t\t},\r\n\t\tboard: {\r\n\t\t\trows: 10,\r\n\t\t\tcolumns: 10,\r\n\t\t\tnumOfMines: 20,\r\n\t\t},\r\n\t\tboardSize: \"small\",\r\n\t\trowMineCount: [],\r\n\t\tcolumnMineCount: [],\r\n\t};\r\n\r\n\tlet settings = {\r\n\t\tboard: {\r\n\t\t\trows: 10,\r\n\t\t\tcolumns: 10,\r\n\t\t\tnumOfMines: 20,\r\n\t\t},\r\n\t\tboardSize: \"small\",\r\n\t\tmaxMines: 50\r\n\t};\r\n\r\n\tconst boardSizes = {\r\n\t\tsmall: {\r\n\t\t\trows: 10,\r\n\t\t\tcolumns: 10,\r\n\t\t\tnumOfMines: 20,\r\n\t\t},\r\n\t\tmedium: {\r\n\t\t\trows: 15,\r\n\t\t\tcolumns: 15,\r\n\t\t\tnumOfMines: 50,\r\n\t\t},\r\n\t\tlarge: {\r\n\t\t\trows: 20,\r\n\t\t\tcolumns: 20,\r\n\t\t\tnumOfMines: 90\r\n\t\t},\r\n\t\tverylarge: {\r\n\t\t\trows: 30,\r\n\t\t\tcolumns: 30,\r\n\t\t\tnumOfMines: 200\r\n\t\t}\r\n\t}\r\n\r\n\tlet statistics = {\r\n\t\tsmall: {\r\n\t\t\t// Games won/lost/played, best time, longest winning/losing streaks, current streak\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: \"\",\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0\r\n\t\t},\r\n\t\tmedium: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: \"\",\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0\r\n\t\t},\r\n\t\tlarge: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: \"\",\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0\r\n\t\t},\r\n\t\tcustom: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0\r\n\t\t},\r\n\t};\r\n\r\n\tlet clockInterval;\r\n\r\n\tfunction createEmptyBoard() {\r\n\t\tboard = [];\r\n\t\tfor (let i = 0; i < gameVars.board.rows; i++) {\r\n\t\t\tboard[i] = [];\r\n\t\t\tfor (let j = 0; j < gameVars.board.columns; j++) {\r\n\t\t\t\tboard[i][j] = new Tile();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction populateBoard(firstTileRow, firstTileColumn, numOfMines) {\r\n\t\tlet values = [];\r\n\t\tfor (let i = 0; i < gameVars.board.rows; i++) {\r\n\t\t\tfor (let j = 0; j < gameVars.board.columns; j++) {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\trow: i,\r\n\t\t\t\t\tcolumn: j\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tgameVars.rowMineCount = new Array(gameVars.board.rows).fill(0);\r\n\t\tgameVars.columnMineCount = new Array(gameVars.board.columns).fill(0);\r\n\r\n\t\tlet firstTile = values.findIndex((tile) => {\r\n\t\t\treturn tile.row == firstTileRow && tile.column == firstTileColumn;\r\n\t\t});\r\n\r\n\t\tif (firstTile != -1) {\r\n\t\t\tvalues.splice(firstTile, 1);\r\n\t\t}\r\n\t\tboard[firstTileRow][firstTileColumn].hasMine = true;\r\n\r\n\t\tfor (let i = 1; i < numOfMines; i++) {\r\n\t\t\tlet random = Math.floor(Math.random() * values.length);\r\n\t\t\tboard[values[random].row][values[random].column].hasMine = true;\r\n\t\t\tvalues.splice(random, 1);\r\n\t\t}\r\n\r\n\t\t// Assign numbers to each tile, and count mines in each row and column\r\n\t\tfor (let row in board) {\r\n\t\t\tfor (let column in board[row]) {\r\n\t\t\t\tcountNearbyMines(parseInt(row), parseInt(column));\r\n\t\t\t\tif (board[row][column].hasMine) {\r\n\t\t\t\t\tgameVars.rowMineCount[row]++;\r\n\t\t\t\t\tgameVars.columnMineCount[column]++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction checkIfTileHasMine(row, column) {\r\n\t\tif (\r\n\t\t\trow < 0 ||\r\n\t\t\trow >= gameVars.board.rows ||\r\n\t\t\tcolumn < 0 ||\r\n\t\t\tcolumn >= gameVars.board.columns ||\r\n\t\t\t!board[row][column].hasMine\r\n\t\t) {\r\n\t\t\treturn 0;\r\n\t\t} else {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction countNearbyMines(row, column) {\r\n\t\tlet count = 0;\r\n\t\tfor (let i = -1; i <= 1; i++) {\r\n\t\t\tfor (let j = -1; j <= 1; j++) {\r\n\t\t\t\tif (i == 0 && j == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tcount += checkIfTileHasMine(row + i, column + j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tboard[row][column].numOfNearbyMines = count;\r\n\t}\r\n\r\n\tfunction getTileElement(row, column) {\r\n\t\treturn DOM.playarea.board.container.querySelector(\r\n\t\t\t`[data-row=\"${row}\"][data-column=\"${column}\"]`\r\n\t\t);\r\n\t}\r\n\r\n\tfunction tileClick(row, column) {\r\n\t\tif (gameVars.state == \"initial\") {\r\n\t\t\tgameVars.state = \"underway\";\r\n\t\t\tpopulateBoard(row, column, gameVars.board.numOfMines);\r\n\t\t\tdisplayBorderNums();\r\n\t\t\tuncoverTile(row, column);\r\n\t\t\tDOM.nav.mineCounter.innerHTML = gameVars.minesLeft;\r\n\t\t\tclockInterval = setInterval(tickClock, 1000);\r\n\t\t\tif (gameVars.xyzzyActivated) {\r\n\t\t\t\txyzzyInit();\r\n\t\t\t}\r\n\t\t} else if (gameVars.state == \"underway\") {\r\n\t\t\tif (gameVars.hintMode == true) {\r\n\t\t\t\tuncoverTile(row, column, true);\r\n\t\t\t\tgameVars.hints -= 1;\r\n\t\t\t\tDOM.nav.hintBtn.dataset.hints = gameVars.hints;\r\n\t\t\t\tif (gameVars.hints <= 0) {\r\n\t\t\t\t\tDOM.nav.hintBtn.classList.remove(\"hint-active\");\r\n\t\t\t\t\tDOM.nav.hintBtn.classList.add(\"hint-disabled\");\r\n\t\t\t\t\tgameVars.hintMode = false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tuncoverTile(row, column);\r\n\t\t\t}\r\n\t\t\tDOM.nav.mineCounter.innerHTML = gameVars.minesLeft;\r\n\t\t}\r\n\t}\r\n\r\n\tlet markMode = \"none\";\r\n\r\n\tfunction tileMark(row, column) {\r\n\t\tif (gameVars.state == \"underway\" && !board[row][column].uncovered) {\r\n\t\t\tif (!board[row][column].markedAsEmpty) {\r\n\t\t\t\tif (markMode == \"none\") {\r\n\t\t\t\t\tmarkMode = \"mark\";\r\n\t\t\t\t}\r\n\t\t\t\tif (markMode == \"mark\") {\r\n\t\t\t\t\tconsole.log(\"marking\");\r\n\t\t\t\t\tboard[row][column].markedAsEmpty = true;\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = '<i class=\"icon-flag\"></i>';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (markMode == \"none\") {\r\n\t\t\t\t\tmarkMode = \"remove\";\r\n\t\t\t\t}\r\n\t\t\t\tif (markMode == \"remove\") {\r\n\t\t\t\t\tconsole.log(\"removing\");\r\n\t\t\t\t\tboard[row][column].markedAsEmpty = false;\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction uncoverTile(row, column, fromMineClick = false, override = false) {\r\n\t\tif (\r\n\t\t\t(gameVars.state != \"underway\" && !override) ||\r\n\t\t\trow < 0 ||\r\n\t\t\trow >= gameVars.board.rows ||\r\n\t\t\tcolumn < 0 ||\r\n\t\t\tcolumn >= gameVars.board.columns ||\r\n\t\t\tboard[row][column].uncovered\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (board[row][column].hasMine && !board[row][column].markedAsEmpty) {\r\n\t\t\tgetTileElement(row, column).innerHTML = \"<i class='icon-mine'></i>\";\r\n\t\t\tgetTileElement(row, column).dataset.clickable = \"false\";\r\n\t\t\tboard[row][column].uncovered = true;\r\n\t\t\tfor (let i = -1; i <= 1; i++) {\r\n\t\t\t\tfor (let j = -1; j <= 1; j++) {\r\n\t\t\t\t\tif (i == 0 && j == 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tuncoverTile(row + i, column + j, true, override);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgameVars.minesLeft--;\r\n\t\t\tif (gameVars.minesLeft == 0 && gameVars.state == \"underway\") {\r\n\t\t\t\tDOM.playarea.winOverlay.container.classList.remove(\"fade\");\r\n\t\t\t\tDOM.playarea.winOverlay.container.classList.add(\"visible\");\r\n\t\t\t\tDOM.playarea.board.container.classList.add(\"no-input\");\r\n\t\t\t\tgameVars.state = \"finished\";\r\n\t\t\t\tclearInterval(clockInterval);\r\n\t\t\t}\r\n\t\t} else if (fromMineClick) {\r\n\t\t\tboard[row][column].uncovered = true;\r\n\t\t\tboard[row][column].markedAsEmpty = false;\r\n\t\t\tgetTileElement(row, column).innerHTML = board[row][column].numOfNearbyMines;\r\n\t\t\tgetTileElement(row, column).dataset.clickable = \"false\";\r\n\t\t} else if (\r\n\t\t\t!board[row][column].markedAsEmpty &&\r\n\t\t\tgameVars.state == \"underway\"\r\n\t\t) {\r\n\t\t\tgetTileElement(row, column).classList.add(\"wrong-tile\");\r\n\t\t\tDOM.playarea.loseOverlay.container.classList.remove(\"fade\");\r\n\t\t\tDOM.playarea.loseOverlay.container.classList.add(\"visible\");\r\n\t\t\tDOM.playarea.board.container.classList.add(\"no-input\");\r\n\t\t\tgameVars.state = \"finished\";\r\n\t\t\tclearInterval(clockInterval);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction uncoverBoard() {\r\n\t\tfor (let row in board) {\r\n\t\t\tfor (let column in board[row]) {\r\n\t\t\t\tif (board[row][column].hasMine && !board[row][column].uncovered) {\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = \"<i class='icon-mine'></i>\";\r\n\t\t\t\t\tgetTileElement(row, column).dataset.clickable = \"false\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = board[row][column].numOfNearbyMines;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction tickClock() {\r\n\t\tgameVars.time.seconds++;\r\n\t\tif (gameVars.time.seconds >= 60) {\r\n\t\t\tgameVars.time.seconds -= 60;\r\n\t\t\tgameVars.time.minutes++;\r\n\t\t}\r\n\r\n\t\tif (gameVars.time.minutes <= 9) {\r\n\t\t\tDOM.nav.timer.minutes.innerHTML = `0${gameVars.time.minutes}`;\r\n\t\t} else {\r\n\t\t\tDOM.nav.timer.minutes.innerHTML = gameVars.time.minutes;\r\n\t\t}\r\n\t\tif (gameVars.time.seconds <= 9) {\r\n\t\t\tDOM.nav.timer.seconds.innerHTML = `0${gameVars.time.seconds}`;\r\n\t\t} else {\r\n\t\t\tDOM.nav.timer.seconds.innerHTML = gameVars.time.seconds;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction displayEmptyBorderNums() {\r\n\t\tlet html = \"\";\r\n\r\n\t\tfor (let i = 0; i < gameVars.board.rows; i++) {\r\n\t\t\thtml += `<div>#</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.rowNums.innerHTML = html;\r\n\t\thtml = \"\";\r\n\r\n\t\tfor (let i = 0; i < gameVars.board.columns; i++) {\r\n\t\t\thtml += `<div>#</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.columnNums.innerHTML = html;\r\n\t}\r\n\r\n\tfunction displayBorderNums() {\r\n\t\tlet html = \"\";\r\n\r\n\t\tfor (let row of gameVars.rowMineCount) {\r\n\t\t\thtml += `<div>${row}</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.rowNums.innerHTML = html;\r\n\t\thtml = \"\";\r\n\r\n\t\tfor (let column of gameVars.columnMineCount) {\r\n\t\t\thtml += `<div>${column}</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.columnNums.innerHTML = html;\r\n\t}\r\n\r\n\tfunction displayBoard() {\r\n\t\tlet html = \"\";\r\n\t\tfor (let row in board) {\r\n\t\t\thtml += `<div>`;\r\n\t\t\tfor (let column in board[row]) {\r\n\t\t\t\thtml += `<div data-row=\"${row}\" data-column=\"${column}\"></div>`;\r\n\t\t\t}\r\n\t\t\thtml += \"</div>\";\r\n\t\t}\r\n\t\tDOM.playarea.board.container.innerHTML = html;\r\n\t\tDOM.playarea.board.tiles = document.querySelectorAll(\r\n\t\t\t\"[data-row][data-column]\"\r\n\t\t);\r\n\r\n\t\tfor (let tile of DOM.playarea.board.tiles) {\r\n\t\t\ttile.addEventListener(\"pointerdown\", evt => {\r\n\t\t\t\tif (gameVars.clickSwap) {\r\n\t\t\t\t\tif (evt.button == 0) {\r\n\t\t\t\t\t\ttileMark(parseInt(tile.dataset.row), parseInt(tile.dataset.column), true);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (evt.button == 2) {\r\n\t\t\t\t\t\ttileMark(parseInt(tile.dataset.row), parseInt(tile.dataset.column), true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tevt.target.releasePointerCapture(evt.pointerId);\r\n\t\t\t})\r\n\t\t\ttile.addEventListener(\"pointerup\", (evt) => {\r\n\t\t\t\tif (gameVars.clickSwap) {\r\n\t\t\t\t\tif (evt.button == 2) {\r\n\t\t\t\t\t\ttileClick(parseInt(tile.dataset.row), parseInt(tile.dataset.column));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (evt.button == 0) {\r\n\t\t\t\t\t\ttileClick(parseInt(tile.dataset.row), parseInt(tile.dataset.column));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tmarkMode = \"none\";\r\n\t\t\t});\r\n\t\t\ttile.addEventListener(\"contextmenu\", (evt) => {\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t\ttile.addEventListener(\"pointerenter\", (evt) => {\r\n\t\t\t\tif (gameVars.clickSwap) {\r\n\t\t\t\t\tif (evt.buttons == 1 || evt.pointerType != \"mouse\") {\r\n\t\t\t\t\t\ttileMark(parseInt(tile.dataset.row), parseInt(tile.dataset.column));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (evt.buttons == 2) {\r\n\t\t\t\t\t\ttileMark(parseInt(tile.dataset.row), parseInt(tile.dataset.column));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.body.addEventListener(\"pointerup\", () => {\r\n\t\tmarkMode = \"none\";\r\n\t})\r\n\r\n\tfunction newGame() {\r\n\t\tgameVars.boardSize = settings.boardSize;\r\n\t\tif (settings.boardSize != \"custom\") {\r\n\t\t\tObject.assign(gameVars.board, boardSizes[gameVars.boardSize]);\r\n\t\t} else {\r\n\t\t\tObject.assign(gameVars.board, settings.board);\r\n\t\t}\r\n\t\tDOM.modals.settings.boardApplyWarning.style.removeProperty(\"display\");\r\n\t\tgameVars.hints = 1 + Math.floor(gameVars.board.columns * gameVars.board.rows / 400);\r\n\t\tgameVars.hintMode = false;\r\n\t\tDOM.nav.hintBtn.dataset.hints = gameVars.hints;\r\n\t\tDOM.nav.hintBtn.classList.remove(\"hint-active\");\r\n\t\tDOM.nav.hintBtn.classList.remove(\"hint-disabled\");\r\n\t\tcreateEmptyBoard();\r\n\t\tdisplayBoard();\r\n\t\tdisplayEmptyBorderNums();\r\n\t\tgameVars.state = \"initial\";\r\n\t\tclearInterval(clockInterval);\r\n\t\tgameVars.time.minutes = gameVars.time.seconds = 0;\r\n\t\tDOM.nav.timer.minutes.innerHTML = DOM.nav.timer.seconds.innerHTML = \"00\";\r\n\t\tDOM.playarea.board.container.classList.remove(\"no-input\");\r\n\t\tDOM.nav.mineCounter.innerHTML = gameVars.minesLeft = gameVars.board.numOfMines;\r\n\t}\r\n\r\n\tDOM.nav.newGameBtn.addEventListener(\"click\", evt => {\r\n\t\tnewGame();\r\n\t});\r\n\r\n\tDOM.nav.hintBtn.addEventListener(\"click\", () => {\r\n\t\tif (gameVars.hints >= 1) {\r\n\t\t\tDOM.nav.hintBtn.classList.toggle(\"hint-active\");\r\n\t\t\tgameVars.hintMode = !gameVars.hintMode;\r\n\t\t}\r\n\t})\r\n\r\n\tdocument.querySelectorAll(\"[data-modalopen]\").forEach(el => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tDOM.modals.container.classList.add(\"visible\");\r\n\t\t\tDOM.modals.container.classList.remove(\"fade\");\r\n\t\t\tdocument.querySelector(el.dataset.modalopen).classList.add(\"visible\");\r\n\t\t\tdocument.querySelector(el.dataset.modalopen).classList.remove(\"fade\");\r\n\t\t});\r\n\t});\r\n\tdocument.querySelectorAll(\".modal-close\").forEach(el => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tDOM.modals.container.classList.add(\"fade\");\r\n\t\t\tDOM.modals.container.classList.remove(\"visible\");\r\n\t\t\tel.parentNode.parentNode.classList.add(\"fade\");\r\n\t\t\tel.parentNode.parentNode.classList.remove(\"visible\");\r\n\t\t});\r\n\t});\r\n\t\r\n\tDOM.modals.settings.container.querySelector(\".modal-close\").addEventListener(\"click\", () => {\r\n\t\tif (gameVars.state != \"underway\") {\r\n\t\t\tnewGame();\r\n\t\t}\r\n\t})\r\n\r\n\tdocument.querySelectorAll(\".modal\").forEach(el => {\r\n\t\tel.addEventListener(\"click\", evt => {\r\n\t\t\tif (evt.target === evt.currentTarget) {\r\n\t\t\t\tDOM.modals.container.classList.add(\"fade\");\r\n\t\t\t\tDOM.modals.container.classList.remove(\"visible\");\r\n\t\t\t\tel.classList.add(\"fade\");\r\n\t\t\t\tel.classList.remove(\"visible\");\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\tDOM.modals.settings.container.addEventListener(\"click\", () => {\r\n\t\tif (gameVars.state != \"underway\") {\r\n\t\t\tnewGame();\r\n\t\t}\r\n\t})\r\n\tDOM.modals.menu.btns.querySelectorAll(\"button\").forEach((el) => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tDOM.modals.menu.container.classList.add(\"fade\");\r\n\t\t\tDOM.modals.menu.container.classList.remove(\"visible\");\r\n\t\t});\r\n\t});\r\n\r\n\tDOM.playarea.board.container.addEventListener(\"scroll\", () => {\r\n\t\tDOM.playarea.rowNums.scroll(0, DOM.playarea.board.container.scrollTop);\r\n\t\tDOM.playarea.columnNums.scroll(DOM.playarea.board.container.scrollLeft, 0);\r\n\t}, {\r\n\t\tpassive: true\r\n\t})\r\n\r\n\tDOM.playarea.winOverlay.newGameBtn.addEventListener(\"click\", () => {\r\n\t\tnewGame();\r\n\t\tDOM.playarea.winOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.winOverlay.container.classList.remove(\"visible\");\r\n\t});\r\n\tDOM.playarea.winOverlay.viewBoardBtn.addEventListener(\"click\", () => {\r\n\t\tDOM.playarea.winOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.winOverlay.container.classList.remove(\"visible\");\r\n\t});\r\n\tDOM.playarea.loseOverlay.newGameBtn.addEventListener(\"click\", () => {\r\n\t\tnewGame();\r\n\t\tDOM.playarea.loseOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.loseOverlay.container.classList.remove(\"visible\");\r\n\t});\r\n\tDOM.playarea.loseOverlay.viewBoardBtn.addEventListener(\"click\", () => {\r\n\t\tDOM.playarea.loseOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.loseOverlay.container.classList.remove(\"visible\");\r\n\t\tuncoverBoard();\r\n\t});\r\n\r\n\t// Settings event listeners\r\n\r\n\tDOM.modals.settings.boardSize.addEventListener(\"change\", evt => {\r\n\t\tsettings.boardSize = evt.target.value;\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\r\n\tconst numbersOnlyRegex = /^[0-9]+$/g;\r\n\r\n\tDOM.modals.settings.customBoard.columns.addEventListener(\"input\", evt => {\r\n\t\tevt.target.value = evt.target.value.match(numbersOnlyRegex);\r\n\t\tif (!evt.target.value) {\r\n\t\t\tsettings.board.columns = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t\tsettings.board.columns = parseInt(evt.target.value);\r\n\t\t} else {\r\n\t\t\tsettings.board.columns = parseInt(evt.target.value);\r\n\t\t}\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\tDOM.modals.settings.customBoard.columns.addEventListener(\"blur\", evt => {\r\n\t\tif (!evt.target.value || evt.target.value < 5) {\r\n\t\t\tevt.target.value = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t}\r\n\t\tsettings.board.columns = parseInt(evt.target.value);\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.modals.settings.customBoard.rows.addEventListener(\"input\", evt => {\r\n\t\tevt.target.value = evt.target.value.match(numbersOnlyRegex);\r\n\t\tif (evt.target.value == \"\") {\r\n\t\t\tsettings.board.rows = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t\tsettings.board.rows = parseInt(evt.target.value);\r\n\t\t} else {\r\n\t\t\tsettings.board.rows = parseInt(evt.target.value);\r\n\t\t}\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\tDOM.modals.settings.customBoard.rows.addEventListener(\"blur\", evt => {\r\n\t\tif (evt.target.value == \"\" || evt.target.value < 5) {\r\n\t\t\tevt.target.value = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t}\r\n\t\tsettings.board.rows = parseInt(evt.target.value);\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.modals.settings.customBoard.numOfMines.addEventListener(\"input\", evt => {\r\n\t\tif (evt.target.value > settings.maxMines) {\r\n\t\t\tevt.target.value = settings.maxMines;\r\n\t\t} else if (evt.target.value < 2 || !evt.target.value) {\r\n\t\t\tevt.target.value = 2;\r\n\t\t}\r\n\t\tsettings.board.numOfMines = parseInt(evt.target.value);\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t} else {\r\n\t\t\tgameVars.board.numOfMines = parseInt(evt.target.value);\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.nav.markSwapBtn.addEventListener(\"click\", () => {\r\n\t\tgameVars.clickSwap = !gameVars.clickSwap;\r\n\t\tif (gameVars.clickSwap) {\r\n\t\t\tDOM.nav.markSwapBtn.innerHTML = '<i class=\"icon-flag\"></i>';\r\n\t\t\tDOM.playarea.board.container.classList.add(\"no-scroll\");\r\n\t\t} else {\r\n\t\t\tDOM.nav.markSwapBtn.innerHTML = '<i class=\"icon-mine\"></i>';\r\n\t\t\tDOM.playarea.board.container.classList.remove(\"no-scroll\");\r\n\t\t}\r\n\t})\r\n\r\n\tconst mobileQuery = window.matchMedia('only screen and (max-width: 767px)');\r\n\tmobileQuery.addEventListener(\"change\", evt => {\r\n\t\tif (!evt.matches) {\r\n\t\t\tgameVars.clickSwap = false;\r\n\t\t\tDOM.playarea.board.container.classList.remove(\"no-scroll\");\r\n\t\t\tDOM.nav.markSwapBtn.innerHTML = '<i class=\"icon-mine\"></i>'\r\n\t\t}\r\n\t})\r\n\r\n\tfunction calculateMaxMines() {\r\n\t\tlet maxMines = Math.floor(settings.board.columns * settings.board.rows / 2);\r\n\t\tif (maxMines < 25) {\r\n\t\t\tmaxMines = 25;\r\n\t\t}\r\n\t\tDOM.modals.settings.customBoard.maxMines.innerHTML = settings.maxMines = maxMines;\r\n\t\tif (DOM.modals.settings.customBoard.numOfMines.value > settings.maxMines) {\r\n\t\t\tDOM.modals.settings.customBoard.numOfMines.value = settings.maxMines;\r\n\t\t}\r\n\t\tsettings.board.numOfMines = parseInt(DOM.modals.settings.customBoard.numOfMines.value);\r\n\t}\r\n\r\n\t// Handle showing custom board sizes\r\n\tDOM.modals.settings.boardSize.addEventListener(\"change\", evt => {\r\n\t\tDOM.modals.settings.customBoard.container.style.height = `${DOM.modals.settings.customBoard.container.scrollHeight}px`;\r\n\t\tif (evt.target.value == \"custom\") {\r\n\t\t\tDOM.modals.settings.customBoard.container.classList.add(\"open\");\r\n\t\t\tDOM.modals.settings.customBoard.container.addEventListener(\"transitionend\", () => {\r\n\t\t\t\tDOM.modals.settings.customBoard.container.style.removeProperty(\"height\");\r\n\t\t\t}, {\r\n\t\t\t\tonce: true\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tDOM.modals.settings.customBoard.container.classList.remove(\"open\");\r\n\t\t\twindow.setTimeout(() => {\r\n\t\t\t\tDOM.modals.settings.customBoard.container.style.removeProperty(\"height\");\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\tlet root = document.documentElement;\r\n\r\n\tDOM.modals.settings.tileSize.addEventListener(\"input\", evt => {\r\n\t\troot.style.setProperty('--tile-size', `${evt.target.value}px`);\r\n\t})\r\n\r\n\tnewGame();\r\n\r\n\tconst urlParams = new URLSearchParams(window.location.search);\r\n\tlet customBoardUnlimited = false;\r\n\tif (urlParams.has('customBoardUnlimited')) {\r\n\t    bulkUnlimited = true;\r\n\t}\r\n\r\n\t// Value Bubbles for Range Inputs\r\n\t// https://codepen.io/chriscoyier/pen/eYNQyPe\r\n\r\n\tconst allRanges = document.querySelectorAll(\".range-wrap\");\r\n\tallRanges.forEach(wrap => {\r\n\t\tconst range = wrap.querySelector('[type=\"range\"]');\r\n\t\tconst bubble = wrap.querySelector(\".bubble\");\r\n\r\n\t\trange.addEventListener(\"input\", () => {\r\n\t\t\tsetBubble(range, bubble);\r\n\t\t});\r\n\t\tsetBubble(range, bubble);\r\n\t});\r\n\r\n\tfunction setBubble(range, bubble) {\r\n\t\tconst val = range.value;\r\n\t\tconst min = range.min ? range.min : 0;\r\n\t\tconst max = range.max ? range.max : 100;\r\n\t\tconst newVal = Number(((val - min) * 100) / (max - min));\r\n\t\tbubble.innerHTML = val;\r\n\r\n\t\t// Sorta magic numbers based on size of the native UI thumb\r\n\t\tbubble.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\r\n\t}\r\n\r\n\t// Xyzzy easter egg code\r\n\r\n\tlet xyzzyPassword = \"xyzzy\";\r\n\tlet passwordPosition = 0;\r\n\tlet xyzzyPixel = byId(\"xyzzypixel\");\r\n\tdocument.onkeydown = (evt) => {\r\n\t\tif (evt.key == xyzzyPassword[passwordPosition]) {\r\n\t\t\tpasswordPosition++;\r\n\t\t} else {\r\n\t\t\tpasswordPosition = 0;\r\n\t\t}\r\n\t\tif (passwordPosition >= 5) {\r\n\t\t\txyzzyInit();\r\n\t\t\tgameVars.xyzzyActivated = true;\r\n\t\t\tdocument.onkeydown = (evt) => {\r\n\t\t\t\tif (evt.key == \"Shift\") {\r\n\t\t\t\t\tgameVars.xyzzyShift = true;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tdocument.onkeyup = (evt) => {\r\n\t\t\t\tif (evt.key == \"Shift\") {\r\n\t\t\t\t\tgameVars.xyzzyShift = false;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tfunction xyzzyInit() {\r\n\t\tDOM.playarea.board.tiles.forEach((el) => {\r\n\t\t\tel.addEventListener(\"mouseover\", () => {\r\n\t\t\t\tif (gameVars.xyzzyShift) {\r\n\t\t\t\t\tif (board[el.dataset.row][el.dataset.column].hasMine) {\r\n\t\t\t\t\t\txyzzyPixel.style.backgroundColor = \"#000\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\txyzzyPixel.style.backgroundColor = \"#FFF\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n})();"],"names":["byId","id","document","getElementById","DOM","nav","menuBtn","settingsBtn","newGameBtn","mineCounter","querySelector","timer","minutes","seconds","hintBtn","markSwapBtn","playarea","columnNums","rowNums","board","tiles","container","winOverlay","viewBoardBtn","loseOverlay","modals","menu","btns","settings","boardSize","customBoard","rows","columns","numOfMines","maxMines","boardApplyWarning","tileSize","Tile","[object Object]","gameVars","state","minesLeft","hints","hintMode","clickSwap","time","rowMineCount","columnMineCount","boardSizes","small","medium","large","verylarge","clockInterval","checkIfTileHasMine","row","column","hasMine","countNearbyMines","count","i","j","numOfNearbyMines","getTileElement","tileClick","firstTileRow","firstTileColumn","values","push","Array","fill","firstTile","findIndex","tile","splice","i1","random","Math","floor","length","parseInt","populateBoard","html","innerHTML","displayBorderNums","uncoverTile","setInterval","tickClock","xyzzyActivated","xyzzyInit","dataset","classList","remove","add","markMode","tileMark","uncovered","markedAsEmpty","console","log","fromMineClick","override","clickable","clearInterval","newGame","Object","assign","style","removeProperty","createEmptyBoard","querySelectorAll","addEventListener","evt","button","target","releasePointerCapture","pointerId","preventDefault","buttons","pointerType","displayBoard","displayEmptyBorderNums","body","toggle","forEach","el","modalopen","parentNode","currentTarget","scroll","scrollTop","scrollLeft","passive","uncoverBoard","value","display","numbersOnlyRegex","match","customBoardUnlimited","calculateMaxMines","window","matchMedia","matches","height","scrollHeight","once","setTimeout","root","documentElement","setProperty","urlParams","URLSearchParams","location","search","has","bulkUnlimited","setBubble","range","bubble","val","min","max","newVal","Number","left","wrap","passwordPosition","xyzzyPixel","xyzzyShift","backgroundColor","onkeydown","key","evt1","onkeyup"],"version":3,"file":"index.3eafef75.js.map"}