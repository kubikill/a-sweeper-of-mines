{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["\"use strict\";\r\n\r\n(function () {\r\n\tfunction byId(id) {\r\n\t\treturn document.getElementById(id);\r\n\t}\r\n\tconst DOM = {\r\n\t\tnav: {\r\n\t\t\tmenuBtn: byId(\"menu-btn\"),\r\n\t\t\tsettingsBtn: byId(\"settings-btn\"),\r\n\t\t\tnewGameBtn: byId(\"newgame-btn\"),\r\n\t\t\tmineCounter: document.querySelector(\"#mine-counter > span\"),\r\n\t\t\ttimer: {\r\n\t\t\t\tminutes: byId(\"timer-minutes\"),\r\n\t\t\t\tseconds: byId(\"timer-seconds\"),\r\n\t\t\t},\r\n\t\t\thintBtn: byId(\"hint-btn\"),\r\n\t\t\tmineBtn: byId(\"mine-btn\"),\r\n\t\t\tmarkBtn: byId(\"mark-btn\")\r\n\t\t},\r\n\t\tplayarea: {\r\n\t\t\tcolumnNums: byId(\"column-nums\"),\r\n\t\t\trowNums: byId(\"row-nums\"),\r\n\t\t\tboard: {\r\n\t\t\t\ttiles: null,\r\n\t\t\t\tcontainer: byId(\"board\"),\r\n\t\t\t},\r\n\t\t\twinOverlay: {\r\n\t\t\t\tcontainer: byId(\"win-overlay\"),\r\n\t\t\t\ttime: byId(\"win-time\"),\r\n\t\t\t\tnewBestTime: byId(\"new-best-time\"),\r\n\t\t\t\tnewGameBtn: byId(\"win-new-game-btn\"),\r\n\t\t\t\tviewBoardBtn: byId(\"win-view-board-btn\"),\r\n\t\t\t},\r\n\t\t\tloseOverlay: {\r\n\t\t\t\tcontainer: byId(\"lose-overlay\"),\r\n\t\t\t\tminesLeft: byId(\"lose-mines-left\"),\r\n\t\t\t\tnewGameBtn: byId(\"lose-new-game-btn\"),\r\n\t\t\t\tviewBoardBtn: byId(\"lose-view-board-btn\"),\r\n\t\t\t},\r\n\t\t},\r\n\t\tmodals: {\r\n\t\t\tcontainer: byId(\"modals\"),\r\n\t\t\tmenu: {\r\n\t\t\t\tcontainer: byId(\"menu-modal\"),\r\n\t\t\t\tbtns: byId(\"menu-modal-btns\"),\r\n\t\t\t},\r\n\t\t\tsettings: {\r\n\t\t\t\tcontainer: byId(\"settings-modal\"),\r\n\t\t\t\tboardSize: byId(\"settings-boardSize\"),\r\n\t\t\t\tcustomBoard: {\r\n\t\t\t\t\tcontainer: byId(\"settings-customBoard\"),\r\n\t\t\t\t\trows: byId(\"settings-boardHeight\"),\r\n\t\t\t\t\tcolumns: byId(\"settings-boardWidth\"),\r\n\t\t\t\t\tnumOfMines: byId(\"settings-mineNum\"),\r\n\t\t\t\t\tmaxMines: byId(\"settings-maxMines\")\r\n\t\t\t\t},\r\n\t\t\t\tboardApplyWarning: byId(\"settings-applywarning\"),\r\n\t\t\t\ttileSize: byId(\"settings-tileSize\"),\r\n\t\t\t\ttheme: byId(\"settings-theme\")\r\n\t\t\t},\r\n\t\t\tstatistics: {\r\n\t\t\t\tselect: byId(\"stats-select\"),\r\n\t\t\t\tgamesPlayed: byId(\"stats-gamesplayed\"),\r\n\t\t\t\tgamesWon: byId(\"stats-gameswon\"),\r\n\t\t\t\tgamesLost: byId(\"stats-gameslost\"),\r\n\t\t\t\twinPercent: byId(\"stats-winpercent\"),\r\n\t\t\t\tbestTime: byId(\"stats-besttime\"),\r\n\t\t\t\tlongestWinningStreak: byId(\"stats-longestwinstreak\"),\r\n\t\t\t\tlongestLosingStreak: byId(\"stats-longestlosestreak\"),\r\n\t\t\t\tcurrentStreak: byId(\"stats-currentstreak\")\r\n\t\t\t},\r\n\t\t\tnewGameWarning: {\r\n\t\t\t\tcontainer: byId(\"newgamewarning-modal\"),\r\n\t\t\t\tconfirm: byId(\"newgamewarning-confirm\")\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tlet board = [];\r\n\r\n\tclass Tile {\r\n\t\tuncovered = false;\r\n\t\thasMine = false;\r\n\t\tnumOfNearbyMines = 0;\r\n\t\tmarkedAsEmpty = false;\r\n\t};\r\n\r\n\tconst gameVars = {\r\n\t\tstate: \"initial\", // 3 states available: initial (new game started, waiting for player to uncover first tile), underway (game in progress), finished (game won or lost, no input allowed on board)\r\n\t\tminesLeft: 20,\r\n\t\thints: 1,\r\n\t\thintMode: false,\r\n\t\tmarkMode: \"none\",\r\n\t\tclickSwap: false,\r\n\t\ttimeStart: null,\r\n\t\tboard: {\r\n\t\t\trows: 10,\r\n\t\t\tcolumns: 10,\r\n\t\t\tnumOfMines: 20,\r\n\t\t},\r\n\t\tboardSize: \"small\",\r\n\t\trowMineCount: [],\r\n\t\tcolumnMineCount: [],\r\n\t};\r\n\r\n\tlet settings = {\r\n\t\tboard: {\r\n\t\t\trows: 10,\r\n\t\t\tcolumns: 10,\r\n\t\t\tnumOfMines: 20,\r\n\t\t},\r\n\t\tboardSize: \"small\",\r\n\t\tmaxMines: 50,\r\n\t\ttileSize: 32,\r\n\t\ttheme: \"auto\"\r\n\t};\r\n\r\n\tconst boardSizes = {\r\n\t\tsmall: {\r\n\t\t\trows: 10,\r\n\t\t\tcolumns: 10,\r\n\t\t\tnumOfMines: 20,\r\n\t\t},\r\n\t\tmedium: {\r\n\t\t\trows: 15,\r\n\t\t\tcolumns: 15,\r\n\t\t\tnumOfMines: 50,\r\n\t\t},\r\n\t\tlarge: {\r\n\t\t\trows: 20,\r\n\t\t\tcolumns: 20,\r\n\t\t\tnumOfMines: 90\r\n\t\t},\r\n\t\tveryLarge: {\r\n\t\t\trows: 30,\r\n\t\t\tcolumns: 30,\r\n\t\t\tnumOfMines: 200\r\n\t\t}\r\n\t}\r\n\r\n\tlet statistics = {\r\n\t\tsmall: {\r\n\t\t\t// Games won/lost/played, best time, longest winning/losing streaks, current streak\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: null,\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0,\r\n\t\t\tstreakMode: \"N/A\"\r\n\t\t},\r\n\t\tmedium: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: null,\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0,\r\n\t\t\tstreakMode: \"N/A\"\r\n\t\t},\r\n\t\tlarge: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: null,\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0,\r\n\t\t\tstreakMode: \"N/A\"\r\n\t\t},\r\n\t\tveryLarge: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tbestTime: null,\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0,\r\n\t\t\tstreakMode: \"N/A\"\r\n\t\t},\r\n\t\tcustom: {\r\n\t\t\tgamesWon: 0,\r\n\t\t\tgamesLost: 0,\r\n\t\t\tlongestWinningStreak: 0,\r\n\t\t\tlongestLosingStreak: 0,\r\n\t\t\tcurrentStreak: 0,\r\n\t\t\tstreakMode: \"N/A\"\r\n\t\t},\r\n\t};\r\n\r\n\tlet clockInterval;\r\n\r\n\tfunction createEmptyBoard() {\r\n\t\tboard = [];\r\n\t\tfor (let i = 0; i < gameVars.board.rows; i++) {\r\n\t\t\tboard[i] = [];\r\n\t\t\tfor (let j = 0; j < gameVars.board.columns; j++) {\r\n\t\t\t\tboard[i][j] = new Tile();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction populateBoardWithMines(firstTileRow, firstTileColumn, numOfMines) {\r\n\t\tlet values = [];\r\n\t\tfor (let i = 0; i < gameVars.board.rows; i++) {\r\n\t\t\tfor (let j = 0; j < gameVars.board.columns; j++) {\r\n\t\t\t\tvalues.push({\r\n\t\t\t\t\trow: i,\r\n\t\t\t\t\tcolumn: j\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tgameVars.rowMineCount = new Array(gameVars.board.rows).fill(0);\r\n\t\tgameVars.columnMineCount = new Array(gameVars.board.columns).fill(0);\r\n\r\n\t\tlet firstTile = values.findIndex((tile) => {\r\n\t\t\treturn tile.row == firstTileRow && tile.column == firstTileColumn;\r\n\t\t});\r\n\r\n\t\tif (firstTile != -1) {\r\n\t\t\tvalues.splice(firstTile, 1);\r\n\t\t}\r\n\t\tboard[firstTileRow][firstTileColumn].hasMine = true;\r\n\r\n\t\tfor (let i = 1; i < numOfMines; i++) {\r\n\t\t\tlet random = Math.floor(Math.random() * values.length);\r\n\t\t\tboard[values[random].row][values[random].column].hasMine = true;\r\n\t\t\tvalues.splice(random, 1);\r\n\t\t}\r\n\r\n\t\t// Assign numbers to each tile, and count mines in each row and column\r\n\t\tfor (let row in board) {\r\n\t\t\tfor (let column in board[row]) {\r\n\t\t\t\tcountNearbyMines(parseInt(row), parseInt(column));\r\n\t\t\t\tif (board[row][column].hasMine) {\r\n\t\t\t\t\tgameVars.rowMineCount[row]++;\r\n\t\t\t\t\tgameVars.columnMineCount[column]++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction checkIfTileHasMine(row, column) {\r\n\t\tif (\r\n\t\t\trow < 0 ||\r\n\t\t\trow >= gameVars.board.rows ||\r\n\t\t\tcolumn < 0 ||\r\n\t\t\tcolumn >= gameVars.board.columns ||\r\n\t\t\t!board[row][column].hasMine\r\n\t\t) {\r\n\t\t\treturn 0;\r\n\t\t} else {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction countNearbyMines(row, column) {\r\n\t\tlet count = 0;\r\n\t\tfor (let i = -1; i <= 1; i++) {\r\n\t\t\tfor (let j = -1; j <= 1; j++) {\r\n\t\t\t\tif (i == 0 && j == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tcount += checkIfTileHasMine(row + i, column + j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tboard[row][column].numOfNearbyMines = count;\r\n\t}\r\n\r\n\tfunction getTileElement(row, column) {\r\n\t\treturn DOM.playarea.board.container.querySelector(\r\n\t\t\t`[data-row=\"${row}\"][data-column=\"${column}\"]`\r\n\t\t);\r\n\t}\r\n\r\n\tfunction tileClick(row, column) {\r\n\t\tif (gameVars.state == \"initial\") {\r\n\t\t\tgameVars.state = \"underway\";\r\n\t\t\tpopulateBoardWithMines(row, column, gameVars.board.numOfMines);\r\n\t\t\tdisplayBorderNums();\r\n\t\t\tclockInterval = setInterval(() => {\r\n\t\t\t\tlet delta = Date.now() - gameVars.timeStart; // milliseconds elapsed since start\r\n\t\t\t\tlet currentSeconds = Math.floor(delta / 1000) // in seconds\r\n\t\t\t\tlet minutes = Math.floor(currentSeconds / 60);\r\n\t\t\t\tlet seconds = currentSeconds % 60;\r\n\t\t\t\tif (minutes <= 9) {\r\n\t\t\t\t\tDOM.nav.timer.minutes.innerHTML = `0${minutes}`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tDOM.nav.timer.minutes.innerHTML = minutes;\r\n\t\t\t\t}\r\n\t\t\t\tif (seconds <= 9) {\r\n\t\t\t\t\tDOM.nav.timer.seconds.innerHTML = `0${seconds}`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tDOM.nav.timer.seconds.innerHTML = seconds;\r\n\t\t\t\t}\r\n\t\t\t}, 200);\r\n\t\t\tgameVars.timeStart = Date.now();\r\n\t\t\tuncoverTile(row, column);\r\n\t\t\tDOM.nav.mineCounter.innerHTML = gameVars.minesLeft;\r\n\t\t\tif (gameVars.xyzzyActivated) {\r\n\t\t\t\txyzzyInit();\r\n\t\t\t}\r\n\t\t} else if (gameVars.state == \"underway\") {\r\n\t\t\tif (gameVars.hintMode == true) {\r\n\t\t\t\tuncoverTile(row, column, true);\r\n\t\t\t\tgameVars.hints -= 1;\r\n\t\t\t\tDOM.nav.hintBtn.dataset.hints = gameVars.hints;\r\n\t\t\t\tif (gameVars.hints <= 0) {\r\n\t\t\t\t\tDOM.nav.hintBtn.classList.remove(\"hint-active\");\r\n\t\t\t\t\tDOM.nav.hintBtn.classList.add(\"hint-disabled\");\r\n\t\t\t\t\tgameVars.hintMode = false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tuncoverTile(row, column);\r\n\t\t\t}\r\n\t\t\tDOM.nav.mineCounter.innerHTML = gameVars.minesLeft;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction tileMark(row, column) {\r\n\t\tif (gameVars.state == \"underway\" && !board[row][column].uncovered) {\r\n\t\t\tif (!board[row][column].markedAsEmpty) {\r\n\t\t\t\tif (gameVars.markMode == \"none\") {\r\n\t\t\t\t\tgameVars.markMode = \"mark\";\r\n\t\t\t\t}\r\n\t\t\t\tif (gameVars.markMode == \"mark\") {\r\n\t\t\t\t\tboard[row][column].markedAsEmpty = true;\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = '<i class=\"icon-flag\"></i>';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (gameVars.markMode == \"none\") {\r\n\t\t\t\t\tgameVars.markMode = \"remove\";\r\n\t\t\t\t}\r\n\t\t\t\tif (gameVars.markMode == \"remove\") {\r\n\t\t\t\t\tboard[row][column].markedAsEmpty = false;\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction uncoverTile(row, column, fromMineClick = false, override = false) {\r\n\t\tif (\r\n\t\t\t(gameVars.state != \"underway\" && !override) ||\r\n\t\t\trow < 0 ||\r\n\t\t\trow >= gameVars.board.rows ||\r\n\t\t\tcolumn < 0 ||\r\n\t\t\tcolumn >= gameVars.board.columns ||\r\n\t\t\tboard[row][column].uncovered\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (board[row][column].hasMine && !board[row][column].markedAsEmpty) {\r\n\t\t\tgetTileElement(row, column).innerHTML = \"<i class='icon-mine'></i>\";\r\n\t\t\tgetTileElement(row, column).dataset.clickable = \"false\";\r\n\t\t\tboard[row][column].uncovered = true;\r\n\t\t\tfor (let i = -1; i <= 1; i++) {\r\n\t\t\t\tfor (let j = -1; j <= 1; j++) {\r\n\t\t\t\t\tif (i == 0 && j == 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tuncoverTile(row + i, column + j, true, override);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgameVars.minesLeft--;\r\n\t\t\tif (gameVars.minesLeft == 0 && gameVars.state == \"underway\") {\r\n\t\t\t\twinGame();\r\n\t\t\t}\r\n\t\t} else if (fromMineClick) {\r\n\t\t\tboard[row][column].uncovered = true;\r\n\t\t\tboard[row][column].markedAsEmpty = false;\r\n\t\t\tgetTileElement(row, column).innerHTML = board[row][column].numOfNearbyMines;\r\n\t\t\tgetTileElement(row, column).dataset.clickable = \"false\";\r\n\t\t} else if (\r\n\t\t\t!board[row][column].markedAsEmpty &&\r\n\t\t\tgameVars.state == \"underway\"\r\n\t\t) {\r\n\t\t\tgetTileElement(row, column).classList.add(\"wrong-tile\");\r\n\t\t\tloseGame();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction winGame() {\r\n\t\t// Calculate time it took to win\r\n\t\tlet endTime = Date.now() - gameVars.timeStart; // milliseconds elapsed since start\r\n\t\tlet currentSeconds = Math.floor(endTime / 1000) // in seconds\r\n\t\tlet minutes = Math.floor(currentSeconds / 60);\r\n\t\tlet seconds = currentSeconds % 60;\r\n\t\tlet milliseconds = endTime % 1000;\r\n\t\tif (minutes <= 9) {\r\n\t\t\tminutes = `0${minutes}`;\r\n\t\t}\r\n\t\tif (seconds <= 9) {\r\n\t\t\tseconds = `0${seconds}`;\r\n\t\t}\r\n\t\tif (milliseconds <= 100) {\r\n\t\t\tmilliseconds = `${\"0\".repeat(3 - milliseconds.toString().length)}${milliseconds}`;\r\n\t\t}\r\n\t\tDOM.playarea.winOverlay.time.innerHTML = `${minutes}:${seconds}.${milliseconds}`;\r\n\r\n\t\t// Update stats\r\n\t\tstatistics[gameVars.boardSize].gamesWon++;\r\n\t\tif (statistics[gameVars.boardSize].streakMode != \"winning\") {\r\n\t\t\tstatistics[gameVars.boardSize].currentStreak = 1;\r\n\t\t\tstatistics[gameVars.boardSize].streakMode = \"winning\";\r\n\t\t} else {\r\n\t\t\tstatistics[gameVars.boardSize].currentStreak++;\r\n\t\t}\r\n\t\tif (statistics[gameVars.boardSize].currentStreak > statistics[gameVars.boardSize].longestWinningStreak) {\r\n\t\t\tstatistics[gameVars.boardSize].longestWinningStreak = statistics[gameVars.boardSize].currentStreak;\r\n\t\t}\r\n\t\tif (endTime <= statistics[gameVars.boardSize].bestTime || statistics[gameVars.boardSize].bestTime === null) {\r\n\t\t\tstatistics[gameVars.boardSize].bestTime = endTime;\r\n\t\t\tDOM.playarea.winOverlay.newBestTime.style.display = \"block\";\r\n\t\t} else {\r\n\t\t\tDOM.playarea.winOverlay.newBestTime.style.display = \"NONE\";\r\n\t\t}\r\n\r\n\t\tlocalStorage.setItem(\"sweeperofmines-statistics\", JSON.stringify(statistics));\r\n\r\n\t\tDOM.playarea.winOverlay.container.classList.remove(\"fade\");\r\n\t\tDOM.playarea.winOverlay.container.classList.add(\"visible\");\r\n\t\tDOM.playarea.board.container.classList.add(\"no-input\");\r\n\t\tgameVars.state = \"finished\";\r\n\t\tclearInterval(clockInterval);\r\n\t}\r\n\r\n\tfunction loseGame() {\r\n\t\t// Update stats\r\n\t\tstatistics[gameVars.boardSize].gamesLost++;\r\n\t\tif (statistics[gameVars.boardSize].streakMode != \"losing\") {\r\n\t\t\tstatistics[gameVars.boardSize].currentStreak = 1;\r\n\t\t\tstatistics[gameVars.boardSize].streakMode = \"losing\";\r\n\t\t} else {\r\n\t\t\tstatistics[gameVars.boardSize].currentStreak++;\r\n\t\t}\r\n\t\tif (statistics[gameVars.boardSize].currentStreak > statistics[gameVars.boardSize].longestLosingStreak) {\r\n\t\t\tstatistics[gameVars.boardSize].longestLosingStreak = statistics[gameVars.boardSize].currentStreak;\r\n\t\t}\r\n\r\n\t\tlocalStorage.setItem(\"sweeperofmines-statistics\", JSON.stringify(statistics));\r\n\r\n\t\tDOM.playarea.loseOverlay.minesLeft.innerHTML = gameVars.minesLeft;\r\n\t\tDOM.playarea.loseOverlay.container.classList.remove(\"fade\");\r\n\t\tDOM.playarea.loseOverlay.container.classList.add(\"visible\");\r\n\t\tDOM.playarea.board.container.classList.add(\"no-input\");\r\n\t\tgameVars.state = \"finished\";\r\n\t\tclearInterval(clockInterval);\r\n\t}\r\n\r\n\tfunction uncoverBoard() {\r\n\t\tfor (let row in board) {\r\n\t\t\tfor (let column in board[row]) {\r\n\t\t\t\tif (board[row][column].hasMine) {\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = \"<i class='icon-mine'></i>\";\r\n\t\t\t\t\tgetTileElement(row, column).dataset.clickable = \"false\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgetTileElement(row, column).innerHTML = board[row][column].numOfNearbyMines;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction displayEmptyBorderNums() {\r\n\t\tlet html = \"\";\r\n\r\n\t\tfor (let i = 0; i < gameVars.board.rows; i++) {\r\n\t\t\thtml += `<div>#</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.rowNums.innerHTML = html;\r\n\t\thtml = \"\";\r\n\r\n\t\tfor (let i = 0; i < gameVars.board.columns; i++) {\r\n\t\t\thtml += `<div>#</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.columnNums.innerHTML = html;\r\n\t}\r\n\r\n\tfunction displayBorderNums() {\r\n\t\tlet html = \"\";\r\n\r\n\t\tfor (let row of gameVars.rowMineCount) {\r\n\t\t\thtml += `<div>${row}</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.rowNums.innerHTML = html;\r\n\t\thtml = \"\";\r\n\r\n\t\tfor (let column of gameVars.columnMineCount) {\r\n\t\t\thtml += `<div>${column}</div>`;\r\n\t\t}\r\n\t\tDOM.playarea.columnNums.innerHTML = html;\r\n\t}\r\n\r\n\tfunction showStats(board) {\r\n\t\tDOM.modals.statistics.gamesPlayed.innerHTML = statistics[board].gamesWon + statistics[board].gamesLost;\r\n\t\tDOM.modals.statistics.gamesWon.innerHTML = statistics[board].gamesWon;\r\n\t\tDOM.modals.statistics.gamesLost.innerHTML = statistics[board].gamesLost;\r\n\t\tif (statistics[board].gamesWon + statistics[board].gamesLost != 0) {\r\n\t\t\tlet percent = statistics[board].gamesWon / (statistics[board].gamesWon + statistics[board].gamesLost) * 100;\r\n\t\t\tDOM.modals.statistics.winPercent.innerHTML = `${percent.toFixed(2)}%`;\r\n\t\t} else {\r\n\t\t\tDOM.modals.statistics.winPercent.innerHTML = \"N/A\"\r\n\t\t}\r\n\t\tDOM.modals.statistics.longestWinningStreak.innerHTML = statistics[board].longestWinningStreak;\r\n\t\tDOM.modals.statistics.longestLosingStreak.innerHTML = statistics[board].longestLosingStreak;\r\n\t\tDOM.modals.statistics.currentStreak.innerHTML = `${statistics[board].currentStreak} (${statistics[board].streakMode})`;\r\n\t\tif (board != \"custom\") {\r\n\t\t\tif (statistics[board].bestTime != null) {\r\n\t\t\t\tlet minutes = Math.floor(statistics[board].bestTime / 1000 / 60);\r\n\t\t\t\tlet seconds = Math.floor((statistics[board].bestTime / 1000) % 60);\r\n\t\t\t\tlet milliseconds = statistics[board].bestTime % 1000;\r\n\t\t\t\tDOM.modals.statistics.bestTime.innerHTML = `${minutes}:${seconds}.${milliseconds}`;\r\n\t\t\t} else {\r\n\t\t\t\tDOM.modals.statistics.bestTime.innerHTML = \"N/A\";\r\n\t\t\t}\r\n\r\n\t\t\tDOM.modals.statistics.bestTime.parentNode.style.removeProperty(\"display\");\r\n\t\t} else {\r\n\t\t\tDOM.modals.statistics.bestTime.parentNode.style.display = \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\tlet multiTouch = false;\r\n\tlet markTouch = false;\r\n\r\n\tfunction displayBoard() {\r\n\t\tlet html = \"\";\r\n\t\tfor (let row in board) {\r\n\t\t\thtml += `<div>`;\r\n\t\t\tfor (let column in board[row]) {\r\n\t\t\t\thtml += `<div data-row=\"${row}\" data-column=\"${column}\"></div>`;\r\n\t\t\t}\r\n\t\t\thtml += \"</div>\";\r\n\t\t}\r\n\t\tDOM.playarea.board.container.innerHTML = html;\r\n\t\tDOM.playarea.board.tiles = document.querySelectorAll(\r\n\t\t\t\"[data-row][data-column]\"\r\n\t\t);\r\n\r\n\t\tfor (let tile of DOM.playarea.board.tiles) {\r\n\t\t\ttile.addEventListener(\"pointerdown\", evt => {\r\n\t\t\t\tif (!evt.isPrimary || multiTouch) {\r\n\t\t\t\t\tmultiTouch = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (evt.button == 2 || gameVars.clickSwap) {\r\n\t\t\t\t\tmarkTouch = true;\r\n\t\t\t\t\ttileMark(parseInt(tile.dataset.row), parseInt(tile.dataset.column), true);\r\n\t\t\t\t}\r\n\t\t\t\tevt.target.releasePointerCapture(evt.pointerId);\r\n\t\t\t})\r\n\t\t\ttile.addEventListener(\"pointerup\", (evt) => {\r\n\t\t\t\tif (!evt.isPrimary) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (evt.isPrimary && multiTouch) {\r\n\t\t\t\t\tmultiTouch = false;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tmarkTouch = false;\r\n\t\t\t\tif (!gameVars.clickSwap && evt.button == 0) {\r\n\t\t\t\t\ttileClick(parseInt(tile.dataset.row), parseInt(tile.dataset.column));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttile.addEventListener(\"contextmenu\", (evt) => {\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t\ttile.addEventListener(\"pointerenter\", (evt) => {\r\n\t\t\t\tif (!evt.isPrimary) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (markTouch || evt.buttons == 2) {\r\n\t\t\t\t\ttileMark(parseInt(tile.dataset.row), parseInt(tile.dataset.column));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttile.addEventListener(\"pointercancel\", evt => {\r\n\t\t\t\tmarkTouch = false;\r\n\t\t\t\tgameVars.markMode = \"none\";\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.body.addEventListener(\"pointerup\", () => {\r\n\t\tmarkTouch = false;\r\n\t\tgameVars.markMode = \"none\";\r\n\t})\r\n\r\n\tfunction newGame() {\r\n\t\tgameVars.boardSize = settings.boardSize;\r\n\t\tif (settings.boardSize != \"custom\") {\r\n\t\t\tObject.assign(gameVars.board, boardSizes[gameVars.boardSize]);\r\n\t\t} else {\r\n\t\t\tObject.assign(gameVars.board, settings.board);\r\n\t\t}\r\n\t\tDOM.modals.settings.boardApplyWarning.style.removeProperty(\"display\");\r\n\t\tgameVars.hints = 1 + Math.floor(gameVars.board.columns * gameVars.board.rows / 400);\r\n\t\tgameVars.hintMode = false;\r\n\t\tDOM.nav.hintBtn.dataset.hints = gameVars.hints;\r\n\t\tDOM.nav.hintBtn.classList.remove(\"hint-active\");\r\n\t\tDOM.nav.hintBtn.classList.remove(\"hint-disabled\");\r\n\t\tcreateEmptyBoard();\r\n\t\tdisplayBoard();\r\n\t\tdisplayEmptyBorderNums();\r\n\t\tgameVars.state = \"initial\";\r\n\t\tclearInterval(clockInterval);\r\n\t\tDOM.nav.timer.minutes.innerHTML = DOM.nav.timer.seconds.innerHTML = \"00\";\r\n\t\tDOM.playarea.board.container.classList.remove(\"no-input\");\r\n\t\tDOM.nav.mineCounter.innerHTML = gameVars.minesLeft = gameVars.board.numOfMines;\r\n\t}\r\n\r\n\tDOM.nav.mineBtn.addEventListener(\"click\", () => {\r\n\t\tgameVars.clickSwap = false;\r\n\t\tDOM.playarea.board.container.classList.remove(\"no-scroll\");\r\n\t\tDOM.nav.mineBtn.classList.add(\"active\");\r\n\t\tDOM.nav.markBtn.classList.remove(\"active\");\r\n\t})\r\n\r\n\tDOM.nav.markBtn.addEventListener(\"click\", () => {\r\n\t\tgameVars.clickSwap = true;\r\n\t\tDOM.playarea.board.container.classList.add(\"no-scroll\")\r\n\t\tDOM.nav.markBtn.classList.add(\"active\");\r\n\t\tDOM.nav.mineBtn.classList.remove(\"active\");\r\n\t})\r\n\r\n\tDOM.nav.newGameBtn.addEventListener(\"click\", evt => {\r\n\t\tif (gameVars.state === \"underway\") {\r\n\t\t\tDOM.modals.container.classList.add(\"visible\");\r\n\t\t\tDOM.modals.container.classList.remove(\"fade\");\r\n\t\t\tDOM.modals.newGameWarning.container.classList.add(\"visible\");\r\n\t\t\tDOM.modals.newGameWarning.container.classList.remove(\"fade\");\r\n\t\t} else {\r\n\t\t\tnewGame();\r\n\t\t}\r\n\t});\r\n\r\n\tDOM.modals.newGameWarning.confirm.addEventListener(\"click\", evt => {\r\n\t\tstatistics[gameVars.boardSize].gamesLost++;\r\n\t\tif (statistics[gameVars.boardSize].streakMode != \"losing\") {\r\n\t\t\tstatistics[gameVars.boardSize].currentStreak = 1;\r\n\t\t\tstatistics[gameVars.boardSize].streakMode = \"losing\";\r\n\t\t} else {\r\n\t\t\tstatistics[gameVars.boardSize].currentStreak++;\r\n\t\t}\r\n\t\tif (statistics[gameVars.boardSize].currentStreak > statistics[gameVars.boardSize].longestLosingStreak) {\r\n\t\t\tstatistics[gameVars.boardSize].longestLosingStreak = statistics[gameVars.boardSize].currentStreak;\r\n\t\t}\r\n\r\n\t\tlocalStorage.setItem(\"sweeperofmines-statistics\", JSON.stringify(statistics));\r\n\r\n\t\tnewGame();\r\n\t});\r\n\r\n\tDOM.nav.hintBtn.addEventListener(\"click\", () => {\r\n\t\tif (gameVars.hints >= 1) {\r\n\t\t\tDOM.nav.hintBtn.classList.toggle(\"hint-active\");\r\n\t\t\tgameVars.hintMode = !gameVars.hintMode;\r\n\t\t}\r\n\t})\r\n\r\n\tdocument.querySelectorAll(\"[data-modalopen]\").forEach(el => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tDOM.modals.container.classList.add(\"visible\");\r\n\t\t\tDOM.modals.container.classList.remove(\"fade\");\r\n\t\t\tdocument.querySelector(el.dataset.modalopen).classList.add(\"visible\");\r\n\t\t\tdocument.querySelector(el.dataset.modalopen).classList.remove(\"fade\");\r\n\t\t});\r\n\t});\r\n\tdocument.querySelectorAll(\".modal-close\").forEach(el => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tDOM.modals.container.classList.add(\"fade\");\r\n\t\t\tDOM.modals.container.classList.remove(\"visible\");\r\n\t\t\tel.parentNode.parentNode.classList.add(\"fade\");\r\n\t\t\tel.parentNode.parentNode.classList.remove(\"visible\");\r\n\t\t});\r\n\t});\r\n\r\n\tdocument.querySelectorAll('[data-modalopen=\"#statistics-modal\"]').forEach(el => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tshowStats(DOM.modals.statistics.select.value);\r\n\t\t});\r\n\t});\r\n\r\n\tDOM.modals.settings.container.addEventListener(\"click\", () => {\r\n\t\tlocalStorage.setItem(\"sweeperofmines-settings\", JSON.stringify(settings));\r\n\t\tif (gameVars.state != \"underway\") {\r\n\t\t\tnewGame();\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.modals.settings.container.querySelector(\".modal-close\").addEventListener(\"click\", () => {\r\n\t\tlocalStorage.setItem(\"sweeperofmines-settings\", JSON.stringify(settings));\r\n\t\tif (gameVars.state != \"underway\") {\r\n\t\t\tnewGame();\r\n\t\t}\r\n\t})\r\n\r\n\tdocument.querySelectorAll(\".modal\").forEach(el => {\r\n\t\tel.addEventListener(\"click\", evt => {\r\n\t\t\tif (evt.target === evt.currentTarget) {\r\n\t\t\t\tif (DOM.modals.settings.container.classList.contains(\"visible\")) {\r\n\t\t\t\t\tlocalStorage.setItem(\"sweeperofmines-settings\", JSON.stringify(settings));\r\n\t\t\t\t}\r\n\t\t\t\tDOM.modals.container.classList.add(\"fade\");\r\n\t\t\t\tDOM.modals.container.classList.remove(\"visible\");\r\n\t\t\t\tel.classList.add(\"fade\");\r\n\t\t\t\tel.classList.remove(\"visible\");\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\tDOM.modals.settings.container.addEventListener(\"click\", () => {\r\n\t\tif (gameVars.state != \"underway\") {\r\n\t\t\tnewGame();\r\n\t\t}\r\n\t})\r\n\tDOM.modals.menu.btns.querySelectorAll(\"button\").forEach((el) => {\r\n\t\tel.addEventListener(\"click\", () => {\r\n\t\t\tDOM.modals.menu.container.classList.add(\"fade\");\r\n\t\t\tDOM.modals.menu.container.classList.remove(\"visible\");\r\n\t\t});\r\n\t});\r\n\r\n\tDOM.playarea.board.container.addEventListener(\"scroll\", () => {\r\n\t\tDOM.playarea.rowNums.scroll(0, DOM.playarea.board.container.scrollTop);\r\n\t\tDOM.playarea.columnNums.scroll(DOM.playarea.board.container.scrollLeft, 0);\r\n\t}, {\r\n\t\tpassive: true\r\n\t})\r\n\r\n\tDOM.playarea.winOverlay.newGameBtn.addEventListener(\"click\", () => {\r\n\t\tnewGame();\r\n\t\tDOM.playarea.winOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.winOverlay.container.classList.remove(\"visible\");\r\n\t});\r\n\tDOM.playarea.winOverlay.viewBoardBtn.addEventListener(\"click\", () => {\r\n\t\tDOM.playarea.winOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.winOverlay.container.classList.remove(\"visible\");\r\n\t});\r\n\tDOM.playarea.loseOverlay.newGameBtn.addEventListener(\"click\", () => {\r\n\t\tnewGame();\r\n\t\tDOM.playarea.loseOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.loseOverlay.container.classList.remove(\"visible\");\r\n\t});\r\n\tDOM.playarea.loseOverlay.viewBoardBtn.addEventListener(\"click\", () => {\r\n\t\tDOM.playarea.loseOverlay.container.classList.add(\"fade\");\r\n\t\tDOM.playarea.loseOverlay.container.classList.remove(\"visible\");\r\n\t\tuncoverBoard();\r\n\t});\r\n\r\n\t// Settings event listeners\r\n\r\n\tDOM.modals.settings.boardSize.addEventListener(\"change\", evt => {\r\n\t\tsettings.boardSize = evt.target.value;\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\r\n\tconst numbersOnlyRegex = /^[0-9]+$/g;\r\n\r\n\tDOM.modals.settings.customBoard.columns.addEventListener(\"input\", evt => {\r\n\t\tevt.target.value = evt.target.value.match(numbersOnlyRegex);\r\n\t\tif (!evt.target.value) {\r\n\t\t\tsettings.board.columns = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t\tsettings.board.columns = parseInt(evt.target.value);\r\n\t\t} else {\r\n\t\t\tsettings.board.columns = parseInt(evt.target.value);\r\n\t\t}\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\tDOM.modals.settings.customBoard.columns.addEventListener(\"blur\", evt => {\r\n\t\tif (!evt.target.value || evt.target.value < 5) {\r\n\t\t\tevt.target.value = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t}\r\n\t\tsettings.board.columns = parseInt(evt.target.value);\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.modals.settings.customBoard.rows.addEventListener(\"input\", evt => {\r\n\t\tevt.target.value = evt.target.value.match(numbersOnlyRegex);\r\n\t\tif (evt.target.value == \"\") {\r\n\t\t\tsettings.board.rows = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t\tsettings.board.rows = parseInt(evt.target.value);\r\n\t\t} else {\r\n\t\t\tsettings.board.rows = parseInt(evt.target.value);\r\n\t\t}\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\tDOM.modals.settings.customBoard.rows.addEventListener(\"blur\", evt => {\r\n\t\tif (evt.target.value == \"\" || evt.target.value < 5) {\r\n\t\t\tevt.target.value = 5;\r\n\t\t} else if (evt.target.value > 100 && !customBoardUnlimited) {\r\n\t\t\tevt.target.value = 100;\r\n\t\t}\r\n\t\tsettings.board.rows = parseInt(evt.target.value);\r\n\t\tcalculateMaxMines();\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.modals.settings.customBoard.numOfMines.addEventListener(\"input\", evt => {\r\n\t\tif (evt.target.value > settings.maxMines) {\r\n\t\t\tevt.target.value = settings.maxMines;\r\n\t\t}\r\n\t\tsettings.board.numOfMines = parseInt(evt.target.value);\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t} else {\r\n\t\t\tgameVars.board.numOfMines = parseInt(evt.target.value);\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.modals.settings.customBoard.numOfMines.addEventListener(\"blur\", evt => {\r\n\t\tif (evt.target.value < 2 || !evt.target.value) {\r\n\t\t\tevt.target.value = 2;\r\n\t\t}\r\n\t\tsettings.board.numOfMines = parseInt(evt.target.value);\r\n\t\tif (gameVars.state == \"underway\") {\r\n\t\t\tDOM.modals.settings.boardApplyWarning.style.display = \"block\";\r\n\t\t} else {\r\n\t\t\tgameVars.board.numOfMines = parseInt(evt.target.value);\r\n\t\t}\r\n\t})\r\n\r\n\tDOM.modals.statistics.select.addEventListener(\"change\", evt => {\r\n\t\tshowStats(evt.target.value);\r\n\t})\r\n\r\n\tfunction calculateMaxMines() {\r\n\t\tlet maxMines = Math.floor(settings.board.columns * settings.board.rows / 2);\r\n\t\tif (maxMines < 12) {\r\n\t\t\tmaxMines = 12;\r\n\t\t}\r\n\t\tDOM.modals.settings.customBoard.maxMines.innerHTML = settings.maxMines = maxMines;\r\n\t\tif (DOM.modals.settings.customBoard.numOfMines.value > settings.maxMines) {\r\n\t\t\tDOM.modals.settings.customBoard.numOfMines.value = settings.maxMines;\r\n\t\t}\r\n\t\tsettings.board.numOfMines = parseInt(DOM.modals.settings.customBoard.numOfMines.value);\r\n\t}\r\n\r\n\t// Handle showing custom board sizes\r\n\tDOM.modals.settings.boardSize.addEventListener(\"change\", evt => {\r\n\t\tDOM.modals.settings.customBoard.container.style.height = `${DOM.modals.settings.customBoard.container.scrollHeight}px`;\r\n\t\tif (evt.target.value == \"custom\") {\r\n\t\t\tDOM.modals.settings.customBoard.container.classList.add(\"open\");\r\n\t\t\tDOM.modals.settings.customBoard.container.addEventListener(\"transitionend\", () => {\r\n\t\t\t\tDOM.modals.settings.customBoard.container.style.removeProperty(\"height\");\r\n\t\t\t}, {\r\n\t\t\t\tonce: true\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tDOM.modals.settings.customBoard.container.classList.remove(\"open\");\r\n\t\t\twindow.setTimeout(() => {\r\n\t\t\t\tDOM.modals.settings.customBoard.container.style.removeProperty(\"height\");\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\tconst root = document.documentElement;\r\n\r\n\tDOM.modals.settings.tileSize.addEventListener(\"input\", evt => {\r\n\t\tsettings.tileSize = evt.target.value;\r\n\t\troot.style.setProperty('--tile-size', `${evt.target.value}px`);\r\n\t})\r\n\r\n\tDOM.modals.settings.theme.addEventListener(\"change\", evt => {\r\n\t\tsettings.theme = evt.target.value;\r\n\t\tswitch (settings.theme) {\r\n\t\t\tcase \"auto\":\r\n\t\t\t\troot.classList.add(\"auto\");\r\n\t\t\t\troot.classList.remove(\"dark\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"light\":\r\n\t\t\t\troot.classList.remove(\"auto\");\r\n\t\t\t\troot.classList.remove(\"dark\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"dark\":\r\n\t\t\t\troot.classList.add(\"dark\");\r\n\t\t\t\troot.classList.remove(\"auto\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t})\r\n\r\n\t// Load stats and options\r\n\r\n\tlet tempSettings = localStorage.getItem(\"sweeperofmines-settings\");\r\n\tlet tempStats = localStorage.getItem(\"sweeperofmines-statistics\");\r\n\r\n\tif (tempSettings != null) {\r\n\t\tsettings = JSON.parse(tempSettings);\r\n\t\tDOM.modals.settings.boardSize.value = settings.boardSize;\r\n\t\tif (settings.boardSize == \"custom\") {\r\n\t\t\tDOM.modals.settings.customBoard.container.classList.add(\"open\");\r\n\t\t}\r\n\t\tDOM.modals.settings.customBoard.columns.value = settings.board.columns;\r\n\t\tDOM.modals.settings.customBoard.rows.value = settings.board.rows;\r\n\t\tDOM.modals.settings.customBoard.numOfMines.value = settings.board.numOfMines;\r\n\t\tDOM.modals.settings.customBoard.maxMines.value = settings.maxMines;\r\n\t\tDOM.modals.settings.tileSize.value = settings.tileSize;\r\n\t\tDOM.modals.settings.theme.value = settings.theme;\r\n\t\tDOM.modals.settings.theme.dispatchEvent(new Event(\"change\"));\r\n\t\troot.style.setProperty('--tile-size', `${settings.tileSize}px`);\r\n\t}\r\n\tif (tempStats != null) {\r\n\t\tstatistics = JSON.parse(tempStats);\r\n\t}\r\n\r\n\t// Remove custom board limits if url has ?customBoardUnlimited\r\n\r\n\tconst urlParams = new URLSearchParams(window.location.search);\r\n\tlet customBoardUnlimited = false;\r\n\tif (urlParams.has('customBoardUnlimited')) {\r\n\t\tbulkUnlimited = true;\r\n\t}\r\n\r\n\r\n\t// Value Bubbles for Range Inputs\r\n\t// https://codepen.io/chriscoyier/pen/eYNQyPe\r\n\r\n\tconst allRanges = document.querySelectorAll(\".range-wrap\");\r\n\tallRanges.forEach(wrap => {\r\n\t\tconst range = wrap.querySelector('[type=\"range\"]');\r\n\t\tconst bubble = wrap.querySelector(\".bubble\");\r\n\r\n\t\trange.addEventListener(\"input\", () => {\r\n\t\t\tsetBubble(range, bubble);\r\n\t\t});\r\n\t\tsetBubble(range, bubble);\r\n\t});\r\n\r\n\tfunction setBubble(range, bubble) {\r\n\t\tconst val = range.value;\r\n\t\tconst min = range.min ? range.min : 0;\r\n\t\tconst max = range.max ? range.max : 100;\r\n\t\tconst newVal = Number(((val - min) * 100) / (max - min));\r\n\t\tbubble.innerHTML = val;\r\n\r\n\t\t// Sorta magic numbers based on size of the native UI thumb\r\n\t\tbubble.style.left = `calc(${newVal}% + (${10 - newVal * 0.19}px))`;\r\n\t}\r\n\r\n\t// Xyzzy easter egg code\r\n\r\n\tlet xyzzyPassword = \"xyzzy\";\r\n\tlet passwordPosition = 0;\r\n\tlet xyzzyPixel = byId(\"xyzzypixel\");\r\n\tdocument.onkeydown = (evt) => {\r\n\t\tif (evt.key == xyzzyPassword[passwordPosition]) {\r\n\t\t\tpasswordPosition++;\r\n\t\t} else {\r\n\t\t\tpasswordPosition = 0;\r\n\t\t}\r\n\t\tif (passwordPosition >= 5) {\r\n\t\t\txyzzyInit();\r\n\t\t\tgameVars.xyzzyActivated = true;\r\n\t\t\tdocument.onkeydown = (evt) => {\r\n\t\t\t\tif (evt.key == \"Shift\") {\r\n\t\t\t\t\tgameVars.xyzzyShift = true;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tdocument.onkeyup = (evt) => {\r\n\t\t\t\tif (evt.key == \"Shift\") {\r\n\t\t\t\t\tgameVars.xyzzyShift = false;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tfunction xyzzyInit() {\r\n\t\tDOM.playarea.board.tiles.forEach((el) => {\r\n\t\t\tel.addEventListener(\"pointerover\", () => {\r\n\t\t\t\tif (gameVars.xyzzyShift) {\r\n\t\t\t\t\tif (board[el.dataset.row][el.dataset.column].hasMine) {\r\n\t\t\t\t\t\txyzzyPixel.style.backgroundColor = \"#000\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\txyzzyPixel.style.backgroundColor = \"#FFF\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t// Start new game on startup\r\n\tnewGame();\r\n})();"],"names":["byId","id","document","getElementById","DOM","nav","menuBtn","settingsBtn","newGameBtn","mineCounter","querySelector","timer","minutes","seconds","hintBtn","mineBtn","markBtn","playarea","columnNums","rowNums","board","tiles","container","winOverlay","time","newBestTime","viewBoardBtn","loseOverlay","minesLeft","modals","menu","btns","settings","boardSize","customBoard","rows","columns","numOfMines","maxMines","boardApplyWarning","tileSize","theme","statistics","select","gamesPlayed","gamesWon","gamesLost","winPercent","bestTime","longestWinningStreak","longestLosingStreak","currentStreak","newGameWarning","confirm","Tile","[object Object]","gameVars","state","hints","hintMode","markMode","clickSwap","timeStart","rowMineCount","columnMineCount","boardSizes","small","medium","large","veryLarge","clockInterval","streakMode","custom","checkIfTileHasMine","row","column","hasMine","countNearbyMines","count","i","j","numOfNearbyMines","getTileElement","tileClick","firstTileRow","firstTileColumn","values","push","Array","fill","firstTile","findIndex","tile","splice","i1","random","Math","floor","length","parseInt","populateBoardWithMines","html","innerHTML","displayBorderNums","setInterval","delta","Date","now","currentSeconds","uncoverTile","xyzzyActivated","xyzzyInit","dataset","classList","remove","add","tileMark","uncovered","markedAsEmpty","fromMineClick","override","clickable","endTime","milliseconds","repeat","toString","style","display","localStorage","setItem","JSON","stringify","clearInterval","winGame","loseGame","showStats","board1","percent","toFixed","parentNode","removeProperty","multiTouch","markTouch","newGame","Object","assign","createEmptyBoard","querySelectorAll","addEventListener","evt","isPrimary","button","target","releasePointerCapture","pointerId","preventDefault","buttons","displayBoard","displayEmptyBorderNums","body","toggle","forEach","el","modalopen","value","currentTarget","contains","scroll","scrollTop","scrollLeft","passive","uncoverBoard","numbersOnlyRegex","calculateMaxMines","match","customBoardUnlimited","height","scrollHeight","once","window","setTimeout","root","documentElement","setProperty","tempSettings","getItem","tempStats","parse","dispatchEvent","Event","urlParams","URLSearchParams","location","search","has","bulkUnlimited","setBubble","range","bubble","val","min","max","newVal","Number","left","wrap","passwordPosition","xyzzyPixel","xyzzyShift","backgroundColor","onkeydown","key","evt1","onkeyup"],"version":3,"file":"index.df2d29e8.js.map"}